{
    "target": "test2",
    "config": {
        "aws:config:region": "us-east-2"
    },
    "latest": {
        "time": "2017-09-11T14:01:48.879946724-07:00",
        "info": {
            "pkg": {
                "name": "todo",
                "runtime": "nodejs",
                "description": "A todo app backend."
            },
            "pwd": "/Users/luke/go/src/github.com/pulumi/pulumi-cloud/examples/todo",
            "program": "",
            "config": {
                "aws:config:region": "us-east-2"
            }
        },
        "resources": {
            "urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo": {
                "id": "todo-e05186c73b99cfa4",
                "custom": true,
                "type": "aws:dynamodb/table:Table",
                "inputs": {
                    "attribute": [
                        {
                            "name": "id",
                            "type": "S"
                        }
                    ],
                    "hashKey": "id",
                    "readCapacity": 5,
                    "writeCapacity": 5
                },
                "defaults": {
                    "name": "todo-e05186c73b99cfa4",
                    "readCapacity": "5",
                    "writeCapacity": "5"
                },
                "outputs": {
                    "arn": "arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4",
                    "attribute": [
                        {
                            "name": "id",
                            "type": "S"
                        }
                    ],
                    "globalSecondaryIndex": [],
                    "hashKey": "id",
                    "id": "todo-e05186c73b99cfa4",
                    "localSecondaryIndex": [],
                    "name": "todo-e05186c73b99cfa4",
                    "readCapacity": "5",
                    "writeCapacity": "5"
                }
            },
            "urn:pulumi:test2::todo::aws:iam/role:Role::todo3454b7045a88364b5cecad7c4d8bbef4513062e4": {
                "id": "todo3454b7045a88364b5cecad7c4d8bbef4513062e4-cbabd8a86f7730cf",
                "custom": true,
                "type": "aws:iam/role:Role",
                "inputs": {
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
                },
                "defaults": {
                    "forceDetachPolicies": false,
                    "name": "todo3454b7045a88364b5cecad7c4d8bbef4513062e4-cbabd8a86f7730cf",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::153052954103:role/todo3454b7045a88364b5cecad7c4d8bbef4513062e4-cbabd8a86f7730cf",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2017-09-11T21:00:21Z",
                    "forceDetachPolicies": false,
                    "id": "todo3454b7045a88364b5cecad7c4d8bbef4513062e4-cbabd8a86f7730cf",
                    "name": "todo3454b7045a88364b5cecad7c4d8bbef4513062e4-cbabd8a86f7730cf",
                    "path": "/",
                    "uniqueId": "AROAJ5T4NQSOCN4I4HXNM"
                }
            },
            "urn:pulumi:test2::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todo3454b7045a88364b5cecad7c4d8bbef4513062e4": {
                "id": "todo3454b7045a88364b5cecad7c4d8bbef4513062e4-cbabd8a86f7730cf-20170911210022029300000001",
                "custom": true,
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "policyArn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "role": "todo3454b7045a88364b5cecad7c4d8bbef4513062e4-cbabd8a86f7730cf"
                },
                "outputs": {
                    "id": "todo3454b7045a88364b5cecad7c4d8bbef4513062e4-cbabd8a86f7730cf-20170911210022029300000001",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "role": "todo3454b7045a88364b5cecad7c4d8bbef4513062e4-cbabd8a86f7730cf"
                }
            },
            "urn:pulumi:test2::todo::aws:s3/bucket:Bucket::todo": {
                "id": "todo-3798db95f44db382",
                "custom": true,
                "type": "aws:s3/bucket:Bucket",
                "defaults": {
                    "acl": "private",
                    "bucket": "todo-3798db95f44db382",
                    "forceDestroy": false
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::todo-3798db95f44db382",
                    "bucket": "todo-3798db95f44db382",
                    "bucketDomainName": "todo-3798db95f44db382.s3.amazonaws.com",
                    "forceDestroy": false,
                    "hostedZoneId": "Z2O1EMRO9K5GLX",
                    "id": "todo-3798db95f44db382",
                    "logging": [],
                    "region": "us-east-2",
                    "requestPayer": "BucketOwner",
                    "tags": {},
                    "versioning": [
                        {
                            "enabled": false,
                            "mfaDelete": false
                        }
                    ],
                    "website": []
                }
            },
            "urn:pulumi:test2::todo::aws:s3/bucketObject:BucketObject::todo3454b7045a88364b5cecad7c4d8bbef4513062e4": {
                "id": "todo3454b7045a88364b5cecad7c4d8bbef4513062e4",
                "custom": true,
                "type": "aws:s3/bucketObject:BucketObject",
                "inputs": {
                    "bucket": "todo-3798db95f44db382",
                    "contentType": "text/html",
                    "key": "todo3454b7045a88364b5cecad7c4d8bbef4513062e4",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "path": "index.html",
                        "text": "",
                        "uri": ""
                    }
                },
                "defaults": {
                    "acl": "private",
                    "source": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-asset-for-tf465159211"
                },
                "outputs": {
                    "acl": "private",
                    "bucket": "todo-3798db95f44db382",
                    "cacheControl": "",
                    "contentDisposition": "",
                    "contentEncoding": "",
                    "contentLanguage": "",
                    "contentType": "text/html",
                    "etag": "b996a167b3143d3a2fc3255ec69dbad4",
                    "id": "todo3454b7045a88364b5cecad7c4d8bbef4513062e4",
                    "key": "todo3454b7045a88364b5cecad7c4d8bbef4513062e4",
                    "serverSideEncryption": "",
                    "source": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-asset-for-tf510242190",
                    "storageClass": "STANDARD",
                    "tags": {},
                    "versionId": "",
                    "websiteRedirect": ""
                }
            },
            "urn:pulumi:test2::todo::aws:iam/role:Role::todobe14e924eed46147948ca9e1d1b01cf7b63d80a9": {
                "id": "todobe14e924eed46147948ca9e1d1b01cf7b63d80a9-e9fc9465f86edac7",
                "custom": true,
                "type": "aws:iam/role:Role",
                "inputs": {
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
                },
                "defaults": {
                    "forceDetachPolicies": false,
                    "name": "todobe14e924eed46147948ca9e1d1b01cf7b63d80a9-e9fc9465f86edac7",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::153052954103:role/todobe14e924eed46147948ca9e1d1b01cf7b63d80a9-e9fc9465f86edac7",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2017-09-11T21:00:31Z",
                    "forceDetachPolicies": false,
                    "id": "todobe14e924eed46147948ca9e1d1b01cf7b63d80a9-e9fc9465f86edac7",
                    "name": "todobe14e924eed46147948ca9e1d1b01cf7b63d80a9-e9fc9465f86edac7",
                    "path": "/",
                    "uniqueId": "AROAIJOCTH74FMPERABMK"
                }
            },
            "urn:pulumi:test2::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todobe14e924eed46147948ca9e1d1b01cf7b63d80a9": {
                "id": "todobe14e924eed46147948ca9e1d1b01cf7b63d80a9-e9fc9465f86edac7-20170911210031952600000002",
                "custom": true,
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "policyArn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "role": "todobe14e924eed46147948ca9e1d1b01cf7b63d80a9-e9fc9465f86edac7"
                },
                "outputs": {
                    "id": "todobe14e924eed46147948ca9e1d1b01cf7b63d80a9-e9fc9465f86edac7-20170911210031952600000002",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "role": "todobe14e924eed46147948ca9e1d1b01cf7b63d80a9-e9fc9465f86edac7"
                }
            },
            "urn:pulumi:test2::todo::aws:s3/bucketObject:BucketObject::todobe14e924eed46147948ca9e1d1b01cf7b63d80a9": {
                "id": "todobe14e924eed46147948ca9e1d1b01cf7b63d80a9",
                "custom": true,
                "type": "aws:s3/bucketObject:BucketObject",
                "inputs": {
                    "bucket": "todo-3798db95f44db382",
                    "contentType": "image/x-icon",
                    "key": "todobe14e924eed46147948ca9e1d1b01cf7b63d80a9",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "path": "favicon.ico",
                        "text": "",
                        "uri": ""
                    }
                },
                "defaults": {
                    "acl": "private",
                    "source": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-asset-for-tf500833685"
                },
                "outputs": {
                    "acl": "private",
                    "bucket": "todo-3798db95f44db382",
                    "cacheControl": "",
                    "contentDisposition": "",
                    "contentEncoding": "",
                    "contentLanguage": "",
                    "contentType": "image/x-icon",
                    "etag": "8b29bc54ef1e39d577bd5a5157c7d285",
                    "id": "todobe14e924eed46147948ca9e1d1b01cf7b63d80a9",
                    "key": "todobe14e924eed46147948ca9e1d1b01cf7b63d80a9",
                    "serverSideEncryption": "",
                    "source": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-asset-for-tf346242544",
                    "storageClass": "STANDARD",
                    "tags": {},
                    "versionId": "",
                    "websiteRedirect": ""
                }
            },
            "urn:pulumi:test2::todo::aws:sns/topic:Topic::unhandled-error-topic": {
                "id": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-f09208640ea97f17",
                "custom": true,
                "type": "aws:sns/topic:Topic",
                "defaults": {
                    "name": "unhandled-error-topic-f09208640ea97f17"
                },
                "outputs": {
                    "arn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-f09208640ea97f17",
                    "displayName": "",
                    "id": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-f09208640ea97f17",
                    "name": "unhandled-error-topic-f09208640ea97f17",
                    "policy": "{\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\",\"SNS:Receive\"],\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"153052954103\"}},\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Resource\":\"arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-f09208640ea97f17\",\"Sid\":\"__default_statement_ID\"}],\"Version\":\"2008-10-17\"}"
                }
            },
            "urn:pulumi:test2::todo::aws:iam/role:Role::todo600341533e58e948000b1a0c26670f16254d6612-iamrole": {
                "id": "todo600341533e58e948000b1a0c26670f16254d6612-iamrole-42140735791",
                "custom": true,
                "type": "aws:iam/role:Role",
                "inputs": {
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Effect\":\"Allow\",\"Sid\":\"\"}]}"
                },
                "defaults": {
                    "forceDetachPolicies": false,
                    "name": "todo600341533e58e948000b1a0c26670f16254d6612-iamrole-42140735791",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::153052954103:role/todo600341533e58e948000b1a0c26670f16254d6612-iamrole-42140735791",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2017-09-11T21:00:36Z",
                    "forceDetachPolicies": false,
                    "id": "todo600341533e58e948000b1a0c26670f16254d6612-iamrole-42140735791",
                    "name": "todo600341533e58e948000b1a0c26670f16254d6612-iamrole-42140735791",
                    "path": "/",
                    "uniqueId": "AROAINE3R3DZUR45EFRYW"
                }
            },
            "urn:pulumi:test2::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todo600341533e58e948000b1a0c26670f16254d6612-iampolicy-0": {
                "id": "todo600341533e58e948000b1a0c26670f16254d6612-iamrole-42140735791-20170911210037647800000003",
                "custom": true,
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "policyArn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "role": "todo600341533e58e948000b1a0c26670f16254d6612-iamrole-42140735791"
                },
                "outputs": {
                    "id": "todo600341533e58e948000b1a0c26670f16254d6612-iamrole-42140735791-20170911210037647800000003",
                    "policyArn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "role": "todo600341533e58e948000b1a0c26670f16254d6612-iamrole-42140735791"
                }
            },
            "urn:pulumi:test2::todo::aws:lambda/function:Function::todo600341533e58e948000b1a0c26670f16254d6612": {
                "id": "todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715",
                "custom": true,
                "type": "aws:lambda/function:Function",
                "inputs": {
                    "code": {
                        "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                        "assets": {
                            "index.js": {
                                "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                                "path": "",
                                "text": "exports.handler = __56afe9c2df27fa0cbd4d008f2a0e59957ced3741;\n\nfunction __56afe9c2df27fa0cbd4d008f2a0e59957ced3741() {\n  var _this;\n  with({ apiGatewayToReqRes: __7f406900de69b661f1b1fba6322c5498c0d43045, middleware: [ __088770ee71ab8d6760adb4209c029c15b6e148b5 ], handler: __cd84a7168ffd85379be5c6e4821e3e574a1b8e8c }) {\n    return (function() {\n\nreturn ((ev, ctx, cb) =\u003e {\n            let body;\n            if (ev.body !== null) {\n                if (ev.isBase64Encoded) {\n                    body = Buffer.from(ev.body, \"base64\");\n                }\n                else {\n                    body = Buffer.from(ev.body, \"utf8\");\n                }\n            }\n            ctx.callbackWaitsForEmptyEventLoop = false;\n            let reqres = apiGatewayToReqRes(ev, body, cb);\n            let i = 0;\n            let next = () =\u003e {\n                let nextMiddleware = middleware[i++];\n                if (nextMiddleware !== undefined) {\n                    nextMiddleware(reqres.req, reqres.res, next);\n                }\n                else {\n                    handler(reqres.req, reqres.res, () =\u003e { return; });\n                }\n            };\n            next();\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __7f406900de69b661f1b1fba6322c5498c0d43045() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn ((ev, body, cb) =\u003e {\n    let response = {\n        statusCode: 200,\n        headers: {},\n        body: Buffer.from([]),\n    };\n    let req = {\n        headers: ev.headers,\n        body: body,\n        method: ev.httpMethod,\n        params: ev.pathParameters,\n        query: ev.queryStringParameters,\n        path: ev.path,\n    };\n    let res = {\n        status: (code) =\u003e {\n            response.statusCode = code;\n            return res;\n        },\n        setHeader: (name, value) =\u003e {\n            response.headers[name] = value;\n            return res;\n        },\n        write: (data, encoding) =\u003e {\n            if (encoding === undefined) {\n                encoding = \"utf8\";\n            }\n            if (typeof data === \"string\") {\n                data = Buffer.from(data, encoding);\n            }\n            response.body = Buffer.concat([response.body, data]);\n            return res;\n        },\n        end: (data, encoding) =\u003e {\n            if (data !== undefined) {\n                res.write(data, encoding);\n            }\n            cb(null, {\n                statusCode: response.statusCode,\n                headers: response.headers,\n                isBase64Encoded: true,\n                body: response.body.toString(\"base64\"),\n            });\n        },\n        json: (obj) =\u003e {\n            res.setHeader(\"content-type\", \"application/json\");\n            res.end(JSON.stringify(obj));\n        },\n    };\n    return { req, res };\n})\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __088770ee71ab8d6760adb4209c029c15b6e148b5() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn ((req, res, next) =\u003e {\n    let auth = req.headers[\"Authorization\"];\n    if (auth !== \"Bearer SECRETPASSWORD\") {\n        res.status(401).end(\"Authorization header required\");\n        return;\n    }\n    next();\n})\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __cd84a7168ffd85379be5c6e4821e3e574a1b8e8c() {\n  var _this;\n  with({ __awaiter: __e74d2e8c8e82fcde3027b68a81de83190981f944, todos: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn ((req, res) =\u003e __awaiter(this, void 0, void 0, function* () {\n    console.log(\"GET /todo/\" + req.params[\"id\"]);\n    try {\n        let item = yield todos.get({ id: req.params[\"id\"] });\n        res.status(200).json(item.value);\n    }\n    catch (err) {\n        res.status(500).json(err);\n    }\n}))\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __e74d2e8c8e82fcde3027b68a81de83190981f944() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn (function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n})\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __48cf5aa4db88b506a79423381c78671d8f81306a() {\n  var _this;\n  with({ db: __17caf9df985b159b0f95269f155924083781d4b2, _this: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn ((query) =\u003e {\n            return db().get({\n                TableName: this.tableName,\n                Key: query,\n            }).promise().then((x) =\u003e x.Item);\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __17caf9df985b159b0f95269f155924083781d4b2() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn (() =\u003e {\n            let awssdk = require(\"aws-sdk\");\n            return new awssdk.DynamoDB.DocumentClient();\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec() {\n  var _this;\n  with({ db: __17caf9df985b159b0f95269f155924083781d4b2, _this: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn ((item) =\u003e {\n            return db().put({\n                TableName: this.tableName,\n                Item: item,\n            }).promise();\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __ab085023313475713fa6a8b9c4160c9d51f2c217() {\n  var _this;\n  with({ db: __17caf9df985b159b0f95269f155924083781d4b2, _this: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn (() =\u003e {\n            return db().scan({\n                TableName: this.tableName,\n            }).promise().then((x) =\u003e x.Items);\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __4710723cfbdcd4c093854c0650f51c18096a0e59() {\n  var _this;\n  with({ db: __17caf9df985b159b0f95269f155924083781d4b2, _this: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn ((query, updates) =\u003e {\n            let updateExpression = \"\";\n            let attributeValues = {};\n            for (let key of Object.keys(updates)) {\n                let val = updates[key];\n                if (updateExpression === \"\") {\n                    updateExpression += \"SET \";\n                }\n                else {\n                    updateExpression += \", \";\n                }\n                updateExpression += `${key} = :${key}`;\n                attributeValues[`:${key}`] = val;\n            }\n            return db().update({\n                TableName: this.tableName,\n                Key: query,\n                UpdateExpression: updateExpression,\n                ExpressionAttributeValues: attributeValues,\n            }).promise().then((x) =\u003e x.Items);\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __a3aeb8a3298039263b13e949d981ba8b98f55517() {\n  var _this;\n  with({ db: __17caf9df985b159b0f95269f155924083781d4b2, _this: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn ((query) =\u003e {\n            return db().delete({\n                TableName: this.tableName,\n                Key: query,\n            }).promise();\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\n",
                                "uri": ""
                            },
                            "node_modules": {
                                "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                                "path": "node_modules",
                                "text": "",
                                "uri": ""
                            }
                        },
                        "path": "",
                        "uri": ""
                    },
                    "deadLetterConfig": [
                        {
                            "targetArn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-f09208640ea97f17"
                        }
                    ],
                    "handler": "index.handler",
                    "role": "arn:aws:iam::153052954103:role/todo600341533e58e948000b1a0c26670f16254d6612-iamrole-42140735791",
                    "runtime": "nodejs6.10",
                    "timeout": 180
                },
                "defaults": {
                    "code": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-archive-for-tf981941391",
                    "memorySize": "128",
                    "name": "todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715",
                    "publish": false,
                    "timeout": "180"
                },
                "outputs": {
                    "arn": "arn:aws:lambda:us-east-2:153052954103:function:todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715",
                    "code": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-archive-for-tf023396514",
                    "deadLetterConfig": [
                        {
                            "targetArn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-f09208640ea97f17"
                        }
                    ],
                    "description": "",
                    "environment": [],
                    "handler": "index.handler",
                    "id": "todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715",
                    "invokeArn": "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715/invocations",
                    "kmsKeyArn": "",
                    "lastModified": "2017-09-11T21:00:47.370+0000",
                    "memorySize": "128",
                    "name": "todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715",
                    "publish": false,
                    "qualifiedArn": "arn:aws:lambda:us-east-2:153052954103:function:todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715:$LATEST",
                    "role": "arn:aws:iam::153052954103:role/todo600341533e58e948000b1a0c26670f16254d6612-iamrole-42140735791",
                    "runtime": "nodejs6.10",
                    "sourceCodeHash": "En+2FwyKK7UfJoeW/z5ZvvusWhzFF3khuKoVce++RlI=",
                    "tags": {},
                    "timeout": "180",
                    "tracingConfig": [
                        {
                            "mode": "PassThrough"
                        }
                    ],
                    "version": "$LATEST",
                    "vpcConfig": []
                }
            },
            "urn:pulumi:test2::todo::aws:cloudwatch/logGroup:LogGroup::todo600341533e58e948000b1a0c26670f16254d6612": {
                "id": "/aws/lambda/todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715",
                "custom": true,
                "type": "aws:cloudwatch/logGroup:LogGroup",
                "inputs": {
                    "name": "/aws/lambda/todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715",
                    "retentionInDays": 1
                },
                "defaults": {
                    "retentionInDays": "1"
                },
                "outputs": {
                    "arn": "arn:aws:logs:us-east-2:153052954103:log-group:/aws/lambda/todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715:*",
                    "id": "/aws/lambda/todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715",
                    "name": "/aws/lambda/todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715",
                    "retentionInDays": "1",
                    "tags": {}
                }
            },
            "urn:pulumi:test2::todo::aws:iam/role:Role::pulumi-app-log-collector-iamrole": {
                "id": "pulumi-app-log-collector-iamrole-be77b6f6e72b1281",
                "custom": true,
                "type": "aws:iam/role:Role",
                "inputs": {
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Effect\":\"Allow\",\"Sid\":\"\"}]}"
                },
                "defaults": {
                    "forceDetachPolicies": false,
                    "name": "pulumi-app-log-collector-iamrole-be77b6f6e72b1281",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::153052954103:role/pulumi-app-log-collector-iamrole-be77b6f6e72b1281",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2017-09-11T21:00:50Z",
                    "forceDetachPolicies": false,
                    "id": "pulumi-app-log-collector-iamrole-be77b6f6e72b1281",
                    "name": "pulumi-app-log-collector-iamrole-be77b6f6e72b1281",
                    "path": "/",
                    "uniqueId": "AROAJBCSKXTGUOFDZTVXE"
                }
            },
            "urn:pulumi:test2::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::pulumi-app-log-collector-iampolicy-0": {
                "id": "pulumi-app-log-collector-iamrole-be77b6f6e72b1281-20170911210051481500000004",
                "custom": true,
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "policyArn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "role": "pulumi-app-log-collector-iamrole-be77b6f6e72b1281"
                },
                "outputs": {
                    "id": "pulumi-app-log-collector-iamrole-be77b6f6e72b1281-20170911210051481500000004",
                    "policyArn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "role": "pulumi-app-log-collector-iamrole-be77b6f6e72b1281"
                }
            },
            "urn:pulumi:test2::todo::aws:lambda/function:Function::pulumi-app-log-collector": {
                "id": "pulumi-app-log-collector-5346f8a09d8356d9",
                "custom": true,
                "type": "aws:lambda/function:Function",
                "inputs": {
                    "code": {
                        "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                        "assets": {
                            "index.js": {
                                "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                                "path": "",
                                "text": "exports.handler = __b61282713b1270694c8f861357e1709b2c11fb78;\n\nfunction __b61282713b1270694c8f861357e1709b2c11fb78() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn ((ev, ctx, cb) =\u003e {\n            let zlib = require(\"zlib\");\n            let payload = new Buffer(ev.awslogs.data, \"base64\");\n            zlib.gunzip(payload, (err, result) =\u003e {\n                if (err !== undefined \u0026\u0026 err !== null) {\n                    cb(err, null);\n                }\n                else {\n                    console.log(result.toString(\"utf8\"));\n                    cb(null, {});\n                }\n            });\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\n",
                                "uri": ""
                            },
                            "node_modules": {
                                "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                                "path": "node_modules",
                                "text": "",
                                "uri": ""
                            }
                        },
                        "path": "",
                        "uri": ""
                    },
                    "handler": "index.handler",
                    "role": "arn:aws:iam::153052954103:role/pulumi-app-log-collector-iamrole-be77b6f6e72b1281",
                    "runtime": "nodejs6.10",
                    "timeout": 180
                },
                "defaults": {
                    "code": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-archive-for-tf627897241",
                    "memorySize": "128",
                    "name": "pulumi-app-log-collector-5346f8a09d8356d9",
                    "publish": false,
                    "timeout": "180"
                },
                "outputs": {
                    "arn": "arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-5346f8a09d8356d9",
                    "code": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-archive-for-tf816303140",
                    "deadLetterConfig": [],
                    "description": "",
                    "environment": [],
                    "handler": "index.handler",
                    "id": "pulumi-app-log-collector-5346f8a09d8356d9",
                    "invokeArn": "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-5346f8a09d8356d9/invocations",
                    "kmsKeyArn": "",
                    "lastModified": "2017-09-11T21:01:00.902+0000",
                    "memorySize": "128",
                    "name": "pulumi-app-log-collector-5346f8a09d8356d9",
                    "publish": false,
                    "qualifiedArn": "arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-5346f8a09d8356d9:$LATEST",
                    "role": "arn:aws:iam::153052954103:role/pulumi-app-log-collector-iamrole-be77b6f6e72b1281",
                    "runtime": "nodejs6.10",
                    "sourceCodeHash": "CFh5dyaOmp7wwBgBAJnLv/J5i2NxQqu724wHl1d1C2w=",
                    "tags": {},
                    "timeout": "180",
                    "tracingConfig": [
                        {
                            "mode": "PassThrough"
                        }
                    ],
                    "version": "$LATEST",
                    "vpcConfig": []
                }
            },
            "urn:pulumi:test2::todo::aws:lambda/permission:Permission::pulumi-app-log-collector": {
                "id": "pulumi-app-log-collector-d8931f21148c1111",
                "custom": true,
                "type": "aws:lambda/permission:Permission",
                "inputs": {
                    "action": "lambda:invokeFunction",
                    "function": "pulumi-app-log-collector-5346f8a09d8356d9",
                    "principal": "logs.us-east-2.amazonaws.com"
                },
                "defaults": {
                    "statementId": "pulumi-app-log-collector-d8931f21148c1111"
                },
                "outputs": {
                    "action": "lambda:invokeFunction",
                    "function": "pulumi-app-log-collector-5346f8a09d8356d9",
                    "id": "pulumi-app-log-collector-d8931f21148c1111",
                    "principal": "logs.us-east-2.amazonaws.com",
                    "qualifier": "",
                    "statementId": "pulumi-app-log-collector-d8931f21148c1111"
                }
            },
            "urn:pulumi:test2::todo::aws:cloudwatch/logSubscriptionFilter:LogSubscriptionFilter::todo600341533e58e948000b1a0c26670f16254d6612": {
                "id": "cwlsf-1086448563",
                "custom": true,
                "type": "aws:cloudwatch/logSubscriptionFilter:LogSubscriptionFilter",
                "inputs": {
                    "destinationArn": "arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-5346f8a09d8356d9",
                    "filterPattern": "",
                    "logGroup": "/aws/lambda/todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715"
                },
                "defaults": {
                    "name": "todo600341533e58e948000b1a0c26670f16254d6612-68db3d6f89608984"
                },
                "outputs": {
                    "destinationArn": "arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-5346f8a09d8356d9",
                    "filterPattern": "",
                    "id": "cwlsf-1086448563",
                    "logGroup": "/aws/lambda/todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715",
                    "name": "todo600341533e58e948000b1a0c26670f16254d6612-68db3d6f89608984"
                }
            },
            "urn:pulumi:test2::todo::aws:iam/role:Role::todoe0999b769746c706c9bce38d0743252af7526ae9-iamrole": {
                "id": "todoe0999b769746c706c9bce38d0743252af7526ae9-iamrole-07d63b8d612",
                "custom": true,
                "type": "aws:iam/role:Role",
                "inputs": {
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Effect\":\"Allow\",\"Sid\":\"\"}]}"
                },
                "defaults": {
                    "forceDetachPolicies": false,
                    "name": "todoe0999b769746c706c9bce38d0743252af7526ae9-iamrole-07d63b8d612",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::153052954103:role/todoe0999b769746c706c9bce38d0743252af7526ae9-iamrole-07d63b8d612",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2017-09-11T21:01:03Z",
                    "forceDetachPolicies": false,
                    "id": "todoe0999b769746c706c9bce38d0743252af7526ae9-iamrole-07d63b8d612",
                    "name": "todoe0999b769746c706c9bce38d0743252af7526ae9-iamrole-07d63b8d612",
                    "path": "/",
                    "uniqueId": "AROAJSGQRZNL4RFMZWIPA"
                }
            },
            "urn:pulumi:test2::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todoe0999b769746c706c9bce38d0743252af7526ae9-iampolicy-0": {
                "id": "todoe0999b769746c706c9bce38d0743252af7526ae9-iamrole-07d63b8d612-20170911210104540600000005",
                "custom": true,
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "policyArn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "role": "todoe0999b769746c706c9bce38d0743252af7526ae9-iamrole-07d63b8d612"
                },
                "outputs": {
                    "id": "todoe0999b769746c706c9bce38d0743252af7526ae9-iamrole-07d63b8d612-20170911210104540600000005",
                    "policyArn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "role": "todoe0999b769746c706c9bce38d0743252af7526ae9-iamrole-07d63b8d612"
                }
            },
            "urn:pulumi:test2::todo::aws:lambda/function:Function::todoe0999b769746c706c9bce38d0743252af7526ae9": {
                "id": "todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173",
                "custom": true,
                "type": "aws:lambda/function:Function",
                "inputs": {
                    "code": {
                        "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                        "assets": {
                            "index.js": {
                                "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                                "path": "",
                                "text": "exports.handler = __56afe9c2df27fa0cbd4d008f2a0e59957ced3741;\n\nfunction __56afe9c2df27fa0cbd4d008f2a0e59957ced3741() {\n  var _this;\n  with({ apiGatewayToReqRes: __7f406900de69b661f1b1fba6322c5498c0d43045, middleware: [  ], handler: __81d168b448dea33d1ed605eaba5b3e1c6a0d9d53 }) {\n    return (function() {\n\nreturn ((ev, ctx, cb) =\u003e {\n            let body;\n            if (ev.body !== null) {\n                if (ev.isBase64Encoded) {\n                    body = Buffer.from(ev.body, \"base64\");\n                }\n                else {\n                    body = Buffer.from(ev.body, \"utf8\");\n                }\n            }\n            ctx.callbackWaitsForEmptyEventLoop = false;\n            let reqres = apiGatewayToReqRes(ev, body, cb);\n            let i = 0;\n            let next = () =\u003e {\n                let nextMiddleware = middleware[i++];\n                if (nextMiddleware !== undefined) {\n                    nextMiddleware(reqres.req, reqres.res, next);\n                }\n                else {\n                    handler(reqres.req, reqres.res, () =\u003e { return; });\n                }\n            };\n            next();\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __7f406900de69b661f1b1fba6322c5498c0d43045() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn ((ev, body, cb) =\u003e {\n    let response = {\n        statusCode: 200,\n        headers: {},\n        body: Buffer.from([]),\n    };\n    let req = {\n        headers: ev.headers,\n        body: body,\n        method: ev.httpMethod,\n        params: ev.pathParameters,\n        query: ev.queryStringParameters,\n        path: ev.path,\n    };\n    let res = {\n        status: (code) =\u003e {\n            response.statusCode = code;\n            return res;\n        },\n        setHeader: (name, value) =\u003e {\n            response.headers[name] = value;\n            return res;\n        },\n        write: (data, encoding) =\u003e {\n            if (encoding === undefined) {\n                encoding = \"utf8\";\n            }\n            if (typeof data === \"string\") {\n                data = Buffer.from(data, encoding);\n            }\n            response.body = Buffer.concat([response.body, data]);\n            return res;\n        },\n        end: (data, encoding) =\u003e {\n            if (data !== undefined) {\n                res.write(data, encoding);\n            }\n            cb(null, {\n                statusCode: response.statusCode,\n                headers: response.headers,\n                isBase64Encoded: true,\n                body: response.body.toString(\"base64\"),\n            });\n        },\n        json: (obj) =\u003e {\n            res.setHeader(\"content-type\", \"application/json\");\n            res.end(JSON.stringify(obj));\n        },\n    };\n    return { req, res };\n})\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __81d168b448dea33d1ed605eaba5b3e1c6a0d9d53() {\n  var _this;\n  with({ __awaiter: __e74d2e8c8e82fcde3027b68a81de83190981f944, todos: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn ((req, res) =\u003e __awaiter(this, void 0, void 0, function* () {\n    console.log(\"POST /todo/\" + req.params[\"id\"]);\n    try {\n        yield todos.insert({ id: req.params[\"id\"], value: req.body.toString() });\n        res.status(201).json({});\n    }\n    catch (err) {\n        res.status(500).json(err);\n    }\n}))\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __e74d2e8c8e82fcde3027b68a81de83190981f944() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn (function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n})\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __48cf5aa4db88b506a79423381c78671d8f81306a() {\n  var _this;\n  with({ db: __17caf9df985b159b0f95269f155924083781d4b2, _this: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn ((query) =\u003e {\n            return db().get({\n                TableName: this.tableName,\n                Key: query,\n            }).promise().then((x) =\u003e x.Item);\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __17caf9df985b159b0f95269f155924083781d4b2() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn (() =\u003e {\n            let awssdk = require(\"aws-sdk\");\n            return new awssdk.DynamoDB.DocumentClient();\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec() {\n  var _this;\n  with({ db: __17caf9df985b159b0f95269f155924083781d4b2, _this: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn ((item) =\u003e {\n            return db().put({\n                TableName: this.tableName,\n                Item: item,\n            }).promise();\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __ab085023313475713fa6a8b9c4160c9d51f2c217() {\n  var _this;\n  with({ db: __17caf9df985b159b0f95269f155924083781d4b2, _this: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn (() =\u003e {\n            return db().scan({\n                TableName: this.tableName,\n            }).promise().then((x) =\u003e x.Items);\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __4710723cfbdcd4c093854c0650f51c18096a0e59() {\n  var _this;\n  with({ db: __17caf9df985b159b0f95269f155924083781d4b2, _this: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn ((query, updates) =\u003e {\n            let updateExpression = \"\";\n            let attributeValues = {};\n            for (let key of Object.keys(updates)) {\n                let val = updates[key];\n                if (updateExpression === \"\") {\n                    updateExpression += \"SET \";\n                }\n                else {\n                    updateExpression += \", \";\n                }\n                updateExpression += `${key} = :${key}`;\n                attributeValues[`:${key}`] = val;\n            }\n            return db().update({\n                TableName: this.tableName,\n                Key: query,\n                UpdateExpression: updateExpression,\n                ExpressionAttributeValues: attributeValues,\n            }).promise().then((x) =\u003e x.Items);\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __a3aeb8a3298039263b13e949d981ba8b98f55517() {\n  var _this;\n  with({ db: __17caf9df985b159b0f95269f155924083781d4b2, _this: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn ((query) =\u003e {\n            return db().delete({\n                TableName: this.tableName,\n                Key: query,\n            }).promise();\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\n",
                                "uri": ""
                            },
                            "node_modules": {
                                "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                                "path": "node_modules",
                                "text": "",
                                "uri": ""
                            }
                        },
                        "path": "",
                        "uri": ""
                    },
                    "deadLetterConfig": [
                        {
                            "targetArn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-f09208640ea97f17"
                        }
                    ],
                    "handler": "index.handler",
                    "role": "arn:aws:iam::153052954103:role/todoe0999b769746c706c9bce38d0743252af7526ae9-iamrole-07d63b8d612",
                    "runtime": "nodejs6.10",
                    "timeout": 180
                },
                "defaults": {
                    "code": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-archive-for-tf144250163",
                    "memorySize": "128",
                    "name": "todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173",
                    "publish": false,
                    "timeout": "180"
                },
                "outputs": {
                    "arn": "arn:aws:lambda:us-east-2:153052954103:function:todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173",
                    "code": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-archive-for-tf538790134",
                    "deadLetterConfig": [
                        {
                            "targetArn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-f09208640ea97f17"
                        }
                    ],
                    "description": "",
                    "environment": [],
                    "handler": "index.handler",
                    "id": "todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173",
                    "invokeArn": "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173/invocations",
                    "kmsKeyArn": "",
                    "lastModified": "2017-09-11T21:01:18.768+0000",
                    "memorySize": "128",
                    "name": "todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173",
                    "publish": false,
                    "qualifiedArn": "arn:aws:lambda:us-east-2:153052954103:function:todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173:$LATEST",
                    "role": "arn:aws:iam::153052954103:role/todoe0999b769746c706c9bce38d0743252af7526ae9-iamrole-07d63b8d612",
                    "runtime": "nodejs6.10",
                    "sourceCodeHash": "CKisIBKpfuT25gdxCmKQfLZRB5JFzvBhEFDeid8Qp8M=",
                    "tags": {},
                    "timeout": "180",
                    "tracingConfig": [
                        {
                            "mode": "PassThrough"
                        }
                    ],
                    "version": "$LATEST",
                    "vpcConfig": []
                }
            },
            "urn:pulumi:test2::todo::aws:cloudwatch/logGroup:LogGroup::todoe0999b769746c706c9bce38d0743252af7526ae9": {
                "id": "/aws/lambda/todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173",
                "custom": true,
                "type": "aws:cloudwatch/logGroup:LogGroup",
                "inputs": {
                    "name": "/aws/lambda/todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173",
                    "retentionInDays": 1
                },
                "defaults": {
                    "retentionInDays": "1"
                },
                "outputs": {
                    "arn": "arn:aws:logs:us-east-2:153052954103:log-group:/aws/lambda/todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173:*",
                    "id": "/aws/lambda/todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173",
                    "name": "/aws/lambda/todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173",
                    "retentionInDays": "1",
                    "tags": {}
                }
            },
            "urn:pulumi:test2::todo::aws:cloudwatch/logSubscriptionFilter:LogSubscriptionFilter::todoe0999b769746c706c9bce38d0743252af7526ae9": {
                "id": "cwlsf-877406210",
                "custom": true,
                "type": "aws:cloudwatch/logSubscriptionFilter:LogSubscriptionFilter",
                "inputs": {
                    "destinationArn": "arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-5346f8a09d8356d9",
                    "filterPattern": "",
                    "logGroup": "/aws/lambda/todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173"
                },
                "defaults": {
                    "name": "todoe0999b769746c706c9bce38d0743252af7526ae9-f84955d5162d2b1c"
                },
                "outputs": {
                    "destinationArn": "arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-5346f8a09d8356d9",
                    "filterPattern": "",
                    "id": "cwlsf-877406210",
                    "logGroup": "/aws/lambda/todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173",
                    "name": "todoe0999b769746c706c9bce38d0743252af7526ae9-f84955d5162d2b1c"
                }
            },
            "urn:pulumi:test2::todo::aws:iam/role:Role::todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-iamrole": {
                "id": "todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-iamrole-62492bbfc8a",
                "custom": true,
                "type": "aws:iam/role:Role",
                "inputs": {
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Effect\":\"Allow\",\"Sid\":\"\"}]}"
                },
                "defaults": {
                    "forceDetachPolicies": false,
                    "name": "todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-iamrole-62492bbfc8a",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::153052954103:role/todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-iamrole-62492bbfc8a",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2017-09-11T21:01:22Z",
                    "forceDetachPolicies": false,
                    "id": "todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-iamrole-62492bbfc8a",
                    "name": "todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-iamrole-62492bbfc8a",
                    "path": "/",
                    "uniqueId": "AROAJY6EW4EERCIVWZW5I"
                }
            },
            "urn:pulumi:test2::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-iampolicy-0": {
                "id": "todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-iamrole-62492bbfc8a-20170911210123573900000006",
                "custom": true,
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "policyArn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "role": "todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-iamrole-62492bbfc8a"
                },
                "outputs": {
                    "id": "todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-iamrole-62492bbfc8a-20170911210123573900000006",
                    "policyArn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "role": "todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-iamrole-62492bbfc8a"
                }
            },
            "urn:pulumi:test2::todo::aws:lambda/function:Function::todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b": {
                "id": "todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad",
                "custom": true,
                "type": "aws:lambda/function:Function",
                "inputs": {
                    "code": {
                        "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                        "assets": {
                            "index.js": {
                                "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                                "path": "",
                                "text": "exports.handler = __56afe9c2df27fa0cbd4d008f2a0e59957ced3741;\n\nfunction __56afe9c2df27fa0cbd4d008f2a0e59957ced3741() {\n  var _this;\n  with({ apiGatewayToReqRes: __7f406900de69b661f1b1fba6322c5498c0d43045, middleware: [  ], handler: __a53e7f2d86668dec21b51a9bda5df72a2630eb8a }) {\n    return (function() {\n\nreturn ((ev, ctx, cb) =\u003e {\n            let body;\n            if (ev.body !== null) {\n                if (ev.isBase64Encoded) {\n                    body = Buffer.from(ev.body, \"base64\");\n                }\n                else {\n                    body = Buffer.from(ev.body, \"utf8\");\n                }\n            }\n            ctx.callbackWaitsForEmptyEventLoop = false;\n            let reqres = apiGatewayToReqRes(ev, body, cb);\n            let i = 0;\n            let next = () =\u003e {\n                let nextMiddleware = middleware[i++];\n                if (nextMiddleware !== undefined) {\n                    nextMiddleware(reqres.req, reqres.res, next);\n                }\n                else {\n                    handler(reqres.req, reqres.res, () =\u003e { return; });\n                }\n            };\n            next();\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __7f406900de69b661f1b1fba6322c5498c0d43045() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn ((ev, body, cb) =\u003e {\n    let response = {\n        statusCode: 200,\n        headers: {},\n        body: Buffer.from([]),\n    };\n    let req = {\n        headers: ev.headers,\n        body: body,\n        method: ev.httpMethod,\n        params: ev.pathParameters,\n        query: ev.queryStringParameters,\n        path: ev.path,\n    };\n    let res = {\n        status: (code) =\u003e {\n            response.statusCode = code;\n            return res;\n        },\n        setHeader: (name, value) =\u003e {\n            response.headers[name] = value;\n            return res;\n        },\n        write: (data, encoding) =\u003e {\n            if (encoding === undefined) {\n                encoding = \"utf8\";\n            }\n            if (typeof data === \"string\") {\n                data = Buffer.from(data, encoding);\n            }\n            response.body = Buffer.concat([response.body, data]);\n            return res;\n        },\n        end: (data, encoding) =\u003e {\n            if (data !== undefined) {\n                res.write(data, encoding);\n            }\n            cb(null, {\n                statusCode: response.statusCode,\n                headers: response.headers,\n                isBase64Encoded: true,\n                body: response.body.toString(\"base64\"),\n            });\n        },\n        json: (obj) =\u003e {\n            res.setHeader(\"content-type\", \"application/json\");\n            res.end(JSON.stringify(obj));\n        },\n    };\n    return { req, res };\n})\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __a53e7f2d86668dec21b51a9bda5df72a2630eb8a() {\n  var _this;\n  with({ __awaiter: __e74d2e8c8e82fcde3027b68a81de83190981f944, todos: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn ((req, res) =\u003e __awaiter(this, void 0, void 0, function* () {\n    console.log(\"GET /todo\");\n    try {\n        let items = yield todos.scan();\n        res.status(200).json(items);\n    }\n    catch (err) {\n        res.status(500).json(err);\n    }\n}))\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __e74d2e8c8e82fcde3027b68a81de83190981f944() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn (function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n})\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __48cf5aa4db88b506a79423381c78671d8f81306a() {\n  var _this;\n  with({ db: __17caf9df985b159b0f95269f155924083781d4b2, _this: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn ((query) =\u003e {\n            return db().get({\n                TableName: this.tableName,\n                Key: query,\n            }).promise().then((x) =\u003e x.Item);\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __17caf9df985b159b0f95269f155924083781d4b2() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn (() =\u003e {\n            let awssdk = require(\"aws-sdk\");\n            return new awssdk.DynamoDB.DocumentClient();\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec() {\n  var _this;\n  with({ db: __17caf9df985b159b0f95269f155924083781d4b2, _this: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn ((item) =\u003e {\n            return db().put({\n                TableName: this.tableName,\n                Item: item,\n            }).promise();\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __ab085023313475713fa6a8b9c4160c9d51f2c217() {\n  var _this;\n  with({ db: __17caf9df985b159b0f95269f155924083781d4b2, _this: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn (() =\u003e {\n            return db().scan({\n                TableName: this.tableName,\n            }).promise().then((x) =\u003e x.Items);\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __4710723cfbdcd4c093854c0650f51c18096a0e59() {\n  var _this;\n  with({ db: __17caf9df985b159b0f95269f155924083781d4b2, _this: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn ((query, updates) =\u003e {\n            let updateExpression = \"\";\n            let attributeValues = {};\n            for (let key of Object.keys(updates)) {\n                let val = updates[key];\n                if (updateExpression === \"\") {\n                    updateExpression += \"SET \";\n                }\n                else {\n                    updateExpression += \", \";\n                }\n                updateExpression += `${key} = :${key}`;\n                attributeValues[`:${key}`] = val;\n            }\n            return db().update({\n                TableName: this.tableName,\n                Key: query,\n                UpdateExpression: updateExpression,\n                ExpressionAttributeValues: attributeValues,\n            }).promise().then((x) =\u003e x.Items);\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\nfunction __a3aeb8a3298039263b13e949d981ba8b98f55517() {\n  var _this;\n  with({ db: __17caf9df985b159b0f95269f155924083781d4b2, _this: { table: { urn: \"urn:pulumi:test2::todo::aws:dynamodb/table:Table::todo\", id: \"todo-e05186c73b99cfa4\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-e05186c73b99cfa4\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-e05186c73b99cfa4\" }, tableName: \"todo-e05186c73b99cfa4\", primaryKey: \"id\", primaryKeyType: \"S\", readCapacity: \"5\", writeCapacity: \"5\", get: __48cf5aa4db88b506a79423381c78671d8f81306a, insert: __ef6911b9e2625d90f0d8ecd1905ed172fc7b28ec, scan: __ab085023313475713fa6a8b9c4160c9d51f2c217, update: __4710723cfbdcd4c093854c0650f51c18096a0e59, delete: __a3aeb8a3298039263b13e949d981ba8b98f55517 } }) {\n    return (function() {\n\nreturn ((query) =\u003e {\n            return db().delete({\n                TableName: this.tableName,\n                Key: query,\n            }).promise();\n        })\n    }).apply(_this).apply(undefined, arguments);\n  }\n}\n\n",
                                "uri": ""
                            },
                            "node_modules": {
                                "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                                "path": "node_modules",
                                "text": "",
                                "uri": ""
                            }
                        },
                        "path": "",
                        "uri": ""
                    },
                    "deadLetterConfig": [
                        {
                            "targetArn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-f09208640ea97f17"
                        }
                    ],
                    "handler": "index.handler",
                    "role": "arn:aws:iam::153052954103:role/todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-iamrole-62492bbfc8a",
                    "runtime": "nodejs6.10",
                    "timeout": 180
                },
                "defaults": {
                    "code": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-archive-for-tf209624029",
                    "memorySize": "128",
                    "name": "todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad",
                    "publish": false,
                    "timeout": "180"
                },
                "outputs": {
                    "arn": "arn:aws:lambda:us-east-2:153052954103:function:todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad",
                    "code": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-archive-for-tf681682328",
                    "deadLetterConfig": [
                        {
                            "targetArn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-f09208640ea97f17"
                        }
                    ],
                    "description": "",
                    "environment": [],
                    "handler": "index.handler",
                    "id": "todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad",
                    "invokeArn": "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad/invocations",
                    "kmsKeyArn": "",
                    "lastModified": "2017-09-11T21:01:37.566+0000",
                    "memorySize": "128",
                    "name": "todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad",
                    "publish": false,
                    "qualifiedArn": "arn:aws:lambda:us-east-2:153052954103:function:todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad:$LATEST",
                    "role": "arn:aws:iam::153052954103:role/todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-iamrole-62492bbfc8a",
                    "runtime": "nodejs6.10",
                    "sourceCodeHash": "X/BRqKHQvPX5jEP3j78B+3vVKhrwWXb2fvZ1+NFxUCs=",
                    "tags": {},
                    "timeout": "180",
                    "tracingConfig": [
                        {
                            "mode": "PassThrough"
                        }
                    ],
                    "version": "$LATEST",
                    "vpcConfig": []
                }
            },
            "urn:pulumi:test2::todo::aws:cloudwatch/logGroup:LogGroup::todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b": {
                "id": "/aws/lambda/todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad",
                "custom": true,
                "type": "aws:cloudwatch/logGroup:LogGroup",
                "inputs": {
                    "name": "/aws/lambda/todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad",
                    "retentionInDays": 1
                },
                "defaults": {
                    "retentionInDays": "1"
                },
                "outputs": {
                    "arn": "arn:aws:logs:us-east-2:153052954103:log-group:/aws/lambda/todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad:*",
                    "id": "/aws/lambda/todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad",
                    "name": "/aws/lambda/todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad",
                    "retentionInDays": "1",
                    "tags": {}
                }
            },
            "urn:pulumi:test2::todo::aws:cloudwatch/logSubscriptionFilter:LogSubscriptionFilter::todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b": {
                "id": "cwlsf-3838439228",
                "custom": true,
                "type": "aws:cloudwatch/logSubscriptionFilter:LogSubscriptionFilter",
                "inputs": {
                    "destinationArn": "arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-5346f8a09d8356d9",
                    "filterPattern": "",
                    "logGroup": "/aws/lambda/todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad"
                },
                "defaults": {
                    "name": "todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-16744626a7b536a1"
                },
                "outputs": {
                    "destinationArn": "arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-5346f8a09d8356d9",
                    "filterPattern": "",
                    "id": "cwlsf-3838439228",
                    "logGroup": "/aws/lambda/todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad",
                    "name": "todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-16744626a7b536a1"
                }
            },
            "urn:pulumi:test2::todo::aws:apigateway/restApi:RestApi::todo": {
                "id": "qafoio2d46",
                "custom": true,
                "type": "aws:apigateway/restApi:RestApi",
                "inputs": {
                    "body": "{\"swagger\":\"2.0\",\"info\":{\"title\":\"todo\",\"version\":\"1.0\"},\"paths\":{\"/\":{\"get\":{\"responses\":{\"200\":{\"description\":\"200 response\",\"schema\":{\"type\":\"object\"},\"headers\":{\"Content-Type\":{\"type\":\"string\"},\"content-type\":{\"type\":\"string\"}}},\"400\":{\"description\":\"400 response\"},\"500\":{\"description\":\"500 response\"}},\"x-amazon-apigateway-integration\":{\"credentials\":\"arn:aws:iam::153052954103:role/todo3454b7045a88364b5cecad7c4d8bbef4513062e4-cbabd8a86f7730cf\",\"uri\":\"arn:aws:apigateway:us-east-2:s3:path/todo/todo3454b7045a88364b5cecad7c4d8bbef4513062e4\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"GET\",\"type\":\"aws\",\"responses\":{\"4\\\\d{2}\":{\"statusCode\":\"400\"},\"default\":{\"statusCode\":\"200\",\"responseParameters\":{\"method.response.header.Content-Type\":\"integration.response.header.Content-Type\",\"method.response.header.content-type\":\"integration.response.header.content-type\"}},\"5\\\\d{2}\":{\"statusCode\":\"500\"}}}}},\"/favicon.ico\":{\"get\":{\"responses\":{\"200\":{\"description\":\"200 response\",\"schema\":{\"type\":\"object\"},\"headers\":{\"Content-Type\":{\"type\":\"string\"},\"content-type\":{\"type\":\"string\"}}},\"400\":{\"description\":\"400 response\"},\"500\":{\"description\":\"500 response\"}},\"x-amazon-apigateway-integration\":{\"credentials\":\"arn:aws:iam::153052954103:role/todobe14e924eed46147948ca9e1d1b01cf7b63d80a9-e9fc9465f86edac7\",\"uri\":\"arn:aws:apigateway:us-east-2:s3:path/todo/todobe14e924eed46147948ca9e1d1b01cf7b63d80a9\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"GET\",\"type\":\"aws\",\"responses\":{\"4\\\\d{2}\":{\"statusCode\":\"400\"},\"default\":{\"statusCode\":\"200\",\"responseParameters\":{\"method.response.header.Content-Type\":\"integration.response.header.Content-Type\",\"method.response.header.content-type\":\"integration.response.header.content-type\"}},\"5\\\\d{2}\":{\"statusCode\":\"500\"}}}}},\"/todo/{id}\":{\"get\":{\"x-amazon-apigateway-integration\":{\"uri\":\"arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715/invocations\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"POST\",\"type\":\"aws_proxy\"}},\"post\":{\"x-amazon-apigateway-integration\":{\"uri\":\"arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173/invocations\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"POST\",\"type\":\"aws_proxy\"}}},\"/todo\":{\"get\":{\"x-amazon-apigateway-integration\":{\"uri\":\"arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad/invocations\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"POST\",\"type\":\"aws_proxy\"}}}},\"x-amazon-apigateway-binary-media-types\":[\"*/*\"]}"
                },
                "defaults": {
                    "name": "todo-6f13a5163a564e34"
                },
                "outputs": {
                    "body": "{\"swagger\":\"2.0\",\"info\":{\"title\":\"todo\",\"version\":\"1.0\"},\"paths\":{\"/\":{\"get\":{\"responses\":{\"200\":{\"description\":\"200 response\",\"schema\":{\"type\":\"object\"},\"headers\":{\"Content-Type\":{\"type\":\"string\"},\"content-type\":{\"type\":\"string\"}}},\"400\":{\"description\":\"400 response\"},\"500\":{\"description\":\"500 response\"}},\"x-amazon-apigateway-integration\":{\"credentials\":\"arn:aws:iam::153052954103:role/todo3454b7045a88364b5cecad7c4d8bbef4513062e4-cbabd8a86f7730cf\",\"uri\":\"arn:aws:apigateway:us-east-2:s3:path/todo/todo3454b7045a88364b5cecad7c4d8bbef4513062e4\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"GET\",\"type\":\"aws\",\"responses\":{\"4\\\\d{2}\":{\"statusCode\":\"400\"},\"default\":{\"statusCode\":\"200\",\"responseParameters\":{\"method.response.header.Content-Type\":\"integration.response.header.Content-Type\",\"method.response.header.content-type\":\"integration.response.header.content-type\"}},\"5\\\\d{2}\":{\"statusCode\":\"500\"}}}}},\"/favicon.ico\":{\"get\":{\"responses\":{\"200\":{\"description\":\"200 response\",\"schema\":{\"type\":\"object\"},\"headers\":{\"Content-Type\":{\"type\":\"string\"},\"content-type\":{\"type\":\"string\"}}},\"400\":{\"description\":\"400 response\"},\"500\":{\"description\":\"500 response\"}},\"x-amazon-apigateway-integration\":{\"credentials\":\"arn:aws:iam::153052954103:role/todobe14e924eed46147948ca9e1d1b01cf7b63d80a9-e9fc9465f86edac7\",\"uri\":\"arn:aws:apigateway:us-east-2:s3:path/todo/todobe14e924eed46147948ca9e1d1b01cf7b63d80a9\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"GET\",\"type\":\"aws\",\"responses\":{\"4\\\\d{2}\":{\"statusCode\":\"400\"},\"default\":{\"statusCode\":\"200\",\"responseParameters\":{\"method.response.header.Content-Type\":\"integration.response.header.Content-Type\",\"method.response.header.content-type\":\"integration.response.header.content-type\"}},\"5\\\\d{2}\":{\"statusCode\":\"500\"}}}}},\"/todo/{id}\":{\"get\":{\"x-amazon-apigateway-integration\":{\"uri\":\"arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715/invocations\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"POST\",\"type\":\"aws_proxy\"}},\"post\":{\"x-amazon-apigateway-integration\":{\"uri\":\"arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173/invocations\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"POST\",\"type\":\"aws_proxy\"}}},\"/todo\":{\"get\":{\"x-amazon-apigateway-integration\":{\"uri\":\"arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad/invocations\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"POST\",\"type\":\"aws_proxy\"}}}},\"x-amazon-apigateway-binary-media-types\":[\"*/*\"]}",
                    "createdDate": "2017-09-11T21:01:41Z",
                    "description": "",
                    "id": "qafoio2d46",
                    "name": "todo",
                    "rootResourceId": "ngqbkdagyh"
                }
            },
            "urn:pulumi:test2::todo::aws:apigateway/deployment:Deployment::todo_3451a891d6d4ffa899e58edc169f2808f88ff54e": {
                "id": "36gi1k",
                "custom": true,
                "type": "aws:apigateway/deployment:Deployment",
                "inputs": {
                    "description": "Deployment of version 3451a891d6d4ffa899e58edc169f2808f88ff54e",
                    "restApi": "qafoio2d46",
                    "stageName": ""
                },
                "outputs": {
                    "createdDate": "2017-09-11T21:01:44Z",
                    "description": "Deployment of version 3451a891d6d4ffa899e58edc169f2808f88ff54e",
                    "executionArn": "arn:aws:execute-api:us-east-2:153052954103:qafoio2d46/",
                    "id": "36gi1k",
                    "invokeUrl": "https://qafoio2d46.execute-api.us-east-2.amazonaws.com/",
                    "restApi": "qafoio2d46",
                    "stageName": ""
                }
            },
            "urn:pulumi:test2::todo::aws:apigateway/stage:Stage::todo_stage": {
                "id": "ags-qafoio2d46-stage",
                "custom": true,
                "type": "aws:apigateway/stage:Stage",
                "inputs": {
                    "deployment": "36gi1k",
                    "description": "The current deployment of the API.",
                    "restApi": "qafoio2d46",
                    "stageName": "stage"
                },
                "outputs": {
                    "cacheClusterEnabled": false,
                    "cacheClusterSize": "",
                    "clientCertificateId": "",
                    "deployment": "36gi1k",
                    "description": "The current deployment of the API.",
                    "documentationVersion": "",
                    "id": "ags-qafoio2d46-stage",
                    "restApi": "qafoio2d46",
                    "stageName": "stage",
                    "variables": {}
                }
            },
            "urn:pulumi:test2::todo::aws:lambda/permission:Permission::todo_invoke_f0c1d77e5037c9d876034ae9a5c197e994057241": {
                "id": "todo_invoke_f0c1d77e5037c9d876034ae9a5c197e994057241-d138b8b26a87450a",
                "custom": true,
                "type": "aws:lambda/permission:Permission",
                "inputs": {
                    "action": "lambda:invokeFunction",
                    "function": "todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715",
                    "principal": "apigateway.amazonaws.com",
                    "sourceArn": "arn:aws:execute-api:us-east-2:153052954103:qafoio2d46/stage/GET/todo/{id}"
                },
                "defaults": {
                    "statementId": "todo_invoke_f0c1d77e5037c9d876034ae9a5c197e994057241-d138b8b26a87450a"
                },
                "outputs": {
                    "action": "lambda:invokeFunction",
                    "function": "todo600341533e58e948000b1a0c26670f16254d6612-19f1469c402b9715",
                    "id": "todo_invoke_f0c1d77e5037c9d876034ae9a5c197e994057241-d138b8b26a87450a",
                    "principal": "apigateway.amazonaws.com",
                    "qualifier": "",
                    "sourceArn": "arn:aws:execute-api:us-east-2:153052954103:qafoio2d46/stage/GET/todo/{id}",
                    "statementId": "todo_invoke_f0c1d77e5037c9d876034ae9a5c197e994057241-d138b8b26a87450a"
                }
            },
            "urn:pulumi:test2::todo::aws:lambda/permission:Permission::todo_invoke_44308e8fc06b3d05202dce0de789f92ae92c7c22": {
                "id": "todo_invoke_44308e8fc06b3d05202dce0de789f92ae92c7c22-d5824b478c3f1963",
                "custom": true,
                "type": "aws:lambda/permission:Permission",
                "inputs": {
                    "action": "lambda:invokeFunction",
                    "function": "todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173",
                    "principal": "apigateway.amazonaws.com",
                    "sourceArn": "arn:aws:execute-api:us-east-2:153052954103:qafoio2d46/stage/POST/todo/{id}"
                },
                "defaults": {
                    "statementId": "todo_invoke_44308e8fc06b3d05202dce0de789f92ae92c7c22-d5824b478c3f1963"
                },
                "outputs": {
                    "action": "lambda:invokeFunction",
                    "function": "todoe0999b769746c706c9bce38d0743252af7526ae9-742d3a9e855f4173",
                    "id": "todo_invoke_44308e8fc06b3d05202dce0de789f92ae92c7c22-d5824b478c3f1963",
                    "principal": "apigateway.amazonaws.com",
                    "qualifier": "",
                    "sourceArn": "arn:aws:execute-api:us-east-2:153052954103:qafoio2d46/stage/POST/todo/{id}",
                    "statementId": "todo_invoke_44308e8fc06b3d05202dce0de789f92ae92c7c22-d5824b478c3f1963"
                }
            },
            "urn:pulumi:test2::todo::aws:lambda/permission:Permission::todo_invoke_a55f2cbc0184a9ff19b1e1b198ed1264e8f2ffe0": {
                "id": "todo_invoke_a55f2cbc0184a9ff19b1e1b198ed1264e8f2ffe0-c4c510ab0fa208e0",
                "custom": true,
                "type": "aws:lambda/permission:Permission",
                "inputs": {
                    "action": "lambda:invokeFunction",
                    "function": "todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad",
                    "principal": "apigateway.amazonaws.com",
                    "sourceArn": "arn:aws:execute-api:us-east-2:153052954103:qafoio2d46/stage/GET/todo"
                },
                "defaults": {
                    "statementId": "todo_invoke_a55f2cbc0184a9ff19b1e1b198ed1264e8f2ffe0-c4c510ab0fa208e0"
                },
                "outputs": {
                    "action": "lambda:invokeFunction",
                    "function": "todo1705a374e1efdbedfd1bb75fe8d9c596a46f057b-c6904947832ca7ad",
                    "id": "todo_invoke_a55f2cbc0184a9ff19b1e1b198ed1264e8f2ffe0-c4c510ab0fa208e0",
                    "principal": "apigateway.amazonaws.com",
                    "qualifier": "",
                    "sourceArn": "arn:aws:execute-api:us-east-2:153052954103:qafoio2d46/stage/GET/todo",
                    "statementId": "todo_invoke_a55f2cbc0184a9ff19b1e1b198ed1264e8f2ffe0-c4c510ab0fa208e0"
                }
            }
        }
    }
}
