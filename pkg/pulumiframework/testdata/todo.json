{
    "target": "foo",
    "config": {
        "aws:config:region": "us-east-2"
    },
    "latest": {
        "time": "2017-10-19T23:43:08.287623-07:00",
        "info": {
            "pkg": {
                "name": "todo",
                "runtime": "nodejs",
                "description": "A todo app backend."
            },
            "pwd": "/Users/luke/go/src/github.com/pulumi/pulumi-cloud/examples/todo",
            "program": "",
            "target": {
                "Name": "foo",
                "Config": {
                    "aws:config:region": "us-east-2"
                }
            }
        },
        "resources": [
            {
                "urn": "urn:pulumi:foo::todo::aws:dynamodb/table:Table::todo",
                "custom": true,
                "id": "todo-8395138762012adb",
                "type": "aws:dynamodb/table:Table",
                "inputs": {
                    "attribute": [
                        {
                            "name": "id",
                            "type": "S"
                        }
                    ],
                    "hashKey": "id",
                    "readCapacity": 5,
                    "writeCapacity": 5
                },
                "defaults": {
                    "name": "todo-8395138762012adb",
                    "readCapacity": "5",
                    "writeCapacity": "5"
                },
                "outputs": {
                    "arn": "arn:aws:dynamodb:us-east-2:153052954103:table/todo-8395138762012adb",
                    "attribute": [
                        {
                            "name": "id",
                            "type": "S"
                        }
                    ],
                    "globalSecondaryIndex": [],
                    "hashKey": "id",
                    "id": "todo-8395138762012adb",
                    "localSecondaryIndex": [],
                    "name": "todo-8395138762012adb",
                    "readCapacity": "5",
                    "writeCapacity": "5"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::cloud:table:Table::todo",
                "custom": false,
                "type": "cloud:table:Table",
                "inputs": {
                    "primaryKey": "id",
                    "primaryKeyType": "string"
                },
                "children": [
                    "urn:pulumi:foo::todo::aws:dynamodb/table:Table::todo"
                ]
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:iam/role:Role::todo4c238266",
                "custom": true,
                "id": "todo4c238266-99cb373551027ad8",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
                },
                "defaults": {
                    "forceDetachPolicies": false,
                    "name": "todo4c238266-99cb373551027ad8",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::153052954103:role/todo4c238266-99cb373551027ad8",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2017-10-20T06:41:47Z",
                    "forceDetachPolicies": false,
                    "id": "todo4c238266-99cb373551027ad8",
                    "name": "todo4c238266-99cb373551027ad8",
                    "path": "/",
                    "uniqueId": "AROAJK5DES6M2NGNFLKWA"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todo4c238266",
                "custom": true,
                "id": "todo4c238266-99cb373551027ad8-20171020064148720200000001",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "policyArn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "role": "todo4c238266-99cb373551027ad8"
                },
                "outputs": {
                    "id": "todo4c238266-99cb373551027ad8-20171020064148720200000001",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "role": "todo4c238266-99cb373551027ad8"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:s3/bucket:Bucket::todo",
                "custom": true,
                "id": "todo-e08f327d4a75b420",
                "type": "aws:s3/bucket:Bucket",
                "defaults": {
                    "acl": "private",
                    "bucket": "todo-e08f327d4a75b420",
                    "forceDestroy": false
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::todo-e08f327d4a75b420",
                    "bucket": "todo-e08f327d4a75b420",
                    "bucketDomainName": "todo-e08f327d4a75b420.s3.amazonaws.com",
                    "forceDestroy": false,
                    "hostedZoneId": "Z2O1EMRO9K5GLX",
                    "id": "todo-e08f327d4a75b420",
                    "logging": [],
                    "region": "us-east-2",
                    "requestPayer": "BucketOwner",
                    "tags": {},
                    "versioning": [
                        {
                            "enabled": false,
                            "mfaDelete": false
                        }
                    ],
                    "website": []
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:s3/bucketObject:BucketObject::todo4c238266",
                "custom": true,
                "id": "todo4c238266",
                "type": "aws:s3/bucketObject:BucketObject",
                "inputs": {
                    "bucket": "todo-e08f327d4a75b420",
                    "contentType": "text/html",
                    "key": "todo4c238266",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "path": "index.html",
                        "text": "",
                        "uri": ""
                    }
                },
                "defaults": {
                    "acl": "private",
                    "source": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-asset-for-tf613632301"
                },
                "outputs": {
                    "acl": "private",
                    "bucket": "todo-e08f327d4a75b420",
                    "cacheControl": "",
                    "contentDisposition": "",
                    "contentEncoding": "",
                    "contentLanguage": "",
                    "contentType": "text/html",
                    "etag": "b996a167b3143d3a2fc3255ec69dbad4",
                    "id": "todo4c238266",
                    "key": "todo4c238266",
                    "serverSideEncryption": "",
                    "source": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-asset-for-tf341229224",
                    "storageClass": "STANDARD",
                    "tags": {},
                    "versionId": "",
                    "websiteRedirect": ""
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:iam/role:Role::todo84fe3e97",
                "custom": true,
                "id": "todo84fe3e97-83e08289cd675da9",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
                },
                "defaults": {
                    "forceDetachPolicies": false,
                    "name": "todo84fe3e97-83e08289cd675da9",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::153052954103:role/todo84fe3e97-83e08289cd675da9",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2017-10-20T06:41:59Z",
                    "forceDetachPolicies": false,
                    "id": "todo84fe3e97-83e08289cd675da9",
                    "name": "todo84fe3e97-83e08289cd675da9",
                    "path": "/",
                    "uniqueId": "AROAISQRSE7X4R3OVX5WW"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todo84fe3e97",
                "custom": true,
                "id": "todo84fe3e97-83e08289cd675da9-20171020064200378800000002",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "policyArn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "role": "todo84fe3e97-83e08289cd675da9"
                },
                "outputs": {
                    "id": "todo84fe3e97-83e08289cd675da9-20171020064200378800000002",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "role": "todo84fe3e97-83e08289cd675da9"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:s3/bucketObject:BucketObject::todo84fe3e97",
                "custom": true,
                "id": "todo84fe3e97",
                "type": "aws:s3/bucketObject:BucketObject",
                "inputs": {
                    "bucket": "todo-e08f327d4a75b420",
                    "contentType": "image/x-icon",
                    "key": "todo84fe3e97",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "path": "favicon.ico",
                        "text": "",
                        "uri": ""
                    }
                },
                "defaults": {
                    "acl": "private",
                    "source": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-asset-for-tf141425127"
                },
                "outputs": {
                    "acl": "private",
                    "bucket": "todo-e08f327d4a75b420",
                    "cacheControl": "",
                    "contentDisposition": "",
                    "contentEncoding": "",
                    "contentLanguage": "",
                    "contentType": "image/x-icon",
                    "etag": "8b29bc54ef1e39d577bd5a5157c7d285",
                    "id": "todo84fe3e97",
                    "key": "todo84fe3e97",
                    "serverSideEncryption": "",
                    "source": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-asset-for-tf724464666",
                    "storageClass": "STANDARD",
                    "tags": {},
                    "versionId": "",
                    "websiteRedirect": ""
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:sns/topic:Topic::unhandled-error-topic",
                "custom": true,
                "id": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-d395f4579a387f1f",
                "type": "aws:sns/topic:Topic",
                "defaults": {
                    "name": "unhandled-error-topic-d395f4579a387f1f"
                },
                "outputs": {
                    "arn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-d395f4579a387f1f",
                    "displayName": "",
                    "id": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-d395f4579a387f1f",
                    "name": "unhandled-error-topic-d395f4579a387f1f",
                    "policy": "{\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\",\"SNS:Receive\"],\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"153052954103\"}},\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Resource\":\"arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-d395f4579a387f1f\",\"Sid\":\"__default_statement_ID\"}],\"Version\":\"2008-10-17\"}"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:iam/role:Role::todo035b5d8f-iamrole",
                "custom": true,
                "id": "todo035b5d8f-iamrole-b900fc55ae6d773c",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Effect\":\"Allow\",\"Sid\":\"\"}]}"
                },
                "defaults": {
                    "forceDetachPolicies": false,
                    "name": "todo035b5d8f-iamrole-b900fc55ae6d773c",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::153052954103:role/todo035b5d8f-iamrole-b900fc55ae6d773c",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2017-10-20T06:42:04Z",
                    "forceDetachPolicies": false,
                    "id": "todo035b5d8f-iamrole-b900fc55ae6d773c",
                    "name": "todo035b5d8f-iamrole-b900fc55ae6d773c",
                    "path": "/",
                    "uniqueId": "AROAJE6P3GHMAHKHE2APQ"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todo035b5d8f-iampolicy-0",
                "custom": true,
                "id": "todo035b5d8f-iamrole-b900fc55ae6d773c-20171020064204959400000003",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "policyArn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "role": "todo035b5d8f-iamrole-b900fc55ae6d773c"
                },
                "outputs": {
                    "id": "todo035b5d8f-iamrole-b900fc55ae6d773c-20171020064204959400000003",
                    "policyArn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "role": "todo035b5d8f-iamrole-b900fc55ae6d773c"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todo035b5d8f-iampolicy-1",
                "custom": true,
                "id": "todo035b5d8f-iamrole-b900fc55ae6d773c-20171020064206212000000004",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEC2ContainerServiceFullAccess",
                    "role": "todo035b5d8f-iamrole-b900fc55ae6d773c"
                },
                "outputs": {
                    "id": "todo035b5d8f-iamrole-b900fc55ae6d773c-20171020064206212000000004",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEC2ContainerServiceFullAccess",
                    "role": "todo035b5d8f-iamrole-b900fc55ae6d773c"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:lambda/function:Function::todo035b5d8f",
                "custom": true,
                "id": "todo035b5d8f-01e92d475a2f3002",
                "type": "aws:lambda/function:Function",
                "inputs": {
                    "code": {
                        "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                        "assets": {
                            ".": {
                                "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                                "path": ".",
                                "text": "",
                                "uri": ""
                            },
                            "__index.js": {
                                "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                                "path": "",
                                "text": "exports.handler = __0169d169bf9c0c93b55a3fe1b8053fe53d0f61d4;\n\nfunction __0169d169bf9c0c93b55a3fe1b8053fe53d0f61d4() {\n  var _this;\n  with({ apiGatewayToRequestResponse: __fbf646106cb48cc5348746d6ce09d72037a0bb76, route: { method: \"GET\", path: \"/todo/{id}\", handlers: [ __d2f8baf55a86f7483292ccab09007d22aa150368, __8b7872fd80790e55abcb5c721527de1381318276 ] } }) {\n    return (function() {\n\nreturn ((ev, ctx, cb) =\u003e {\n                let body;\n                if (ev.body !== null) {\n                    if (ev.isBase64Encoded) {\n                        body = Buffer.from(ev.body, \"base64\");\n                    }\n                    else {\n                        body = Buffer.from(ev.body, \"utf8\");\n                    }\n                }\n                ctx.callbackWaitsForEmptyEventLoop = false;\n                const reqres = apiGatewayToRequestResponse(ev, body, cb);\n                let i = 0;\n                const next = () =\u003e {\n                    const nextHandler = route.handlers[i++];\n                    if (nextHandler !== undefined) {\n                        nextHandler(reqres.req, reqres.res, next);\n                    }\n                };\n                next();\n            })\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __fbf646106cb48cc5348746d6ce09d72037a0bb76() {\n  var _this;\n  with({ stageName: \"stage\" }) {\n    return (function() {\n\nreturn (function apiGatewayToRequestResponse(ev, body, cb) {\n    const response = {\n        statusCode: 200,\n        headers: {},\n        body: Buffer.from([]),\n    };\n    const req = {\n        headers: ev.headers,\n        body: body,\n        method: ev.httpMethod,\n        params: ev.pathParameters,\n        query: ev.queryStringParameters,\n        path: ev.path,\n        baseUrl: \"/\" + stageName,\n        hostname: ev.headers[\"Host\"],\n        protocol: ev.headers[\"X-Forwarded-Proto\"],\n    };\n    const res = {\n        status: (code) =\u003e {\n            response.statusCode = code;\n            return res;\n        },\n        setHeader: (name, value) =\u003e {\n            response.headers[name] = value;\n            return res;\n        },\n        write: (data, encoding) =\u003e {\n            if (encoding === undefined) {\n                encoding = \"utf8\";\n            }\n            if (typeof data === \"string\") {\n                data = Buffer.from(data, encoding);\n            }\n            response.body = Buffer.concat([response.body, data]);\n            return res;\n        },\n        end: (data, encoding) =\u003e {\n            if (data !== undefined) {\n                res.write(data, encoding);\n            }\n            cb(null, {\n                statusCode: response.statusCode,\n                headers: response.headers,\n                isBase64Encoded: true,\n                body: response.body.toString(\"base64\"),\n            });\n        },\n        json: (obj) =\u003e {\n            res.setHeader(\"content-type\", \"application/json\");\n            res.end(JSON.stringify(obj));\n        },\n    };\n    return { req, res };\n})\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __d2f8baf55a86f7483292ccab09007d22aa150368() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn ((req, res, next) =\u003e {\n    let auth = req.headers[\"Authorization\"];\n    if (auth !== \"Bearer SECRETPASSWORD\") {\n        res.status(401).end(\"Authorization header required\");\n        return;\n    }\n    next();\n})\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __8b7872fd80790e55abcb5c721527de1381318276() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, todos: { children: [ { children: [  ], urn: \"urn:pulumi:foo::todo::aws:dynamodb/table:Table::todo\", id: \"todo-8395138762012adb\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-8395138762012adb\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-8395138762012adb\" } ], urn: \"urn:pulumi:foo::todo::cloud:table:Table::todo\", primaryKey: \"id\", primaryKeyType: \"string\", get: __de12b166a364a9769984c51313b4328acef95ec9, insert: __9fc3e6ad61b50294e8234ce81d7f555b55a55b14, scan: __33f0f539657556dd7113c9c283470525c3520e2f, update: __18824dffdc9492ac299f7927ff814407db751f5b, delete: __0a58bec212683a7542edd8c369785e7d05a2471e } }) {\n    return (function() {\n\nreturn ((req, res) =\u003e __awaiter(this, void 0, void 0, function* () {\n    console.log(\"GET /todo/\" + req.params[\"id\"]);\n    try {\n        let item = yield todos.get({ id: req.params[\"id\"] });\n        res.status(200).json(item.value);\n    }\n    catch (err) {\n        res.status(500).json(err);\n    }\n}))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __492fe142c8be132f2ccfdc443ed720d77b1ef3a6() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn (function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n})\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __de12b166a364a9769984c51313b4328acef95ec9() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, db: __32fa8104bfb1107c90c2d18cfcadb353e7323c4c, getTableName: __c07e3bd4cfe020892784d1c8d199d2c579e71cb6 }) {\n    return (function() {\n\nreturn ((query) =\u003e __awaiter(this, void 0, void 0, function* () {\n            const result = yield db().get({\n                TableName: getTableName(),\n                Key: query,\n                ConsistentRead: true,\n            }).promise();\n            return result.Item;\n        }))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __32fa8104bfb1107c90c2d18cfcadb353e7323c4c() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn (() =\u003e {\n            const awssdk = require(\"aws-sdk\");\n            return new awssdk.DynamoDB.DocumentClient();\n        })\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __c07e3bd4cfe020892784d1c8d199d2c579e71cb6() {\n  var _this;\n  with({ tableName: \"todo-8395138762012adb\" }) {\n    return (function() {\n\nreturn (function getTableName() {\n            // Hack: Because of our outside/inside system for pulumi, tableName is seen as a\n            // Computed\u003cstring\u003e on the outside, but a string on the inside. Of course, there's no\n            // way to make TypeScript aware of that.  So we just fool the typesystem with these\n            // explicit casts.\n            //\n            // see: https://github.com/pulumi/pulumi/issues/331#issuecomment-333280955\n            return tableName;\n        })\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __9fc3e6ad61b50294e8234ce81d7f555b55a55b14() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, db: __32fa8104bfb1107c90c2d18cfcadb353e7323c4c, getTableName: __c07e3bd4cfe020892784d1c8d199d2c579e71cb6 }) {\n    return (function() {\n\nreturn ((item) =\u003e __awaiter(this, void 0, void 0, function* () {\n            yield db().put({\n                TableName: getTableName(),\n                Item: item,\n            }).promise();\n        }))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __33f0f539657556dd7113c9c283470525c3520e2f() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, db: __32fa8104bfb1107c90c2d18cfcadb353e7323c4c, getTableName: __c07e3bd4cfe020892784d1c8d199d2c579e71cb6 }) {\n    return (function() {\n\nreturn (() =\u003e __awaiter(this, void 0, void 0, function* () {\n            const result = yield db().scan({\n                TableName: getTableName(),\n                ConsistentRead: true,\n            }).promise();\n            return result.Items;\n        }))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __18824dffdc9492ac299f7927ff814407db751f5b() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, db: __32fa8104bfb1107c90c2d18cfcadb353e7323c4c, getTableName: __c07e3bd4cfe020892784d1c8d199d2c579e71cb6 }) {\n    return (function() {\n\nreturn ((query, updates) =\u003e __awaiter(this, void 0, void 0, function* () {\n            let updateExpression = \"\";\n            const attributeValues = {};\n            for (const key of Object.keys(updates)) {\n                const val = updates[key];\n                if (updateExpression === \"\") {\n                    updateExpression += \"SET \";\n                }\n                else {\n                    updateExpression += \", \";\n                }\n                updateExpression += `${key} = :${key}`;\n                attributeValues[`:${key}`] = val;\n            }\n            yield db().update({\n                TableName: getTableName(),\n                Key: query,\n                UpdateExpression: updateExpression,\n                ExpressionAttributeValues: attributeValues,\n            }).promise();\n        }))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __0a58bec212683a7542edd8c369785e7d05a2471e() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, db: __32fa8104bfb1107c90c2d18cfcadb353e7323c4c, getTableName: __c07e3bd4cfe020892784d1c8d199d2c579e71cb6 }) {\n    return (function() {\n\nreturn ((query) =\u003e __awaiter(this, void 0, void 0, function* () {\n            yield db().delete({\n                TableName: getTableName(),\n                Key: query,\n            }).promise();\n        }))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\n",
                                "uri": ""
                            }
                        },
                        "path": "",
                        "uri": ""
                    },
                    "deadLetterConfig": [
                        {
                            "targetArn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-d395f4579a387f1f"
                        }
                    ],
                    "handler": "__index.handler",
                    "role": "arn:aws:iam::153052954103:role/todo035b5d8f-iamrole-b900fc55ae6d773c",
                    "runtime": "nodejs6.10",
                    "timeout": 180
                },
                "defaults": {
                    "code": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-archive-for-tf184314545",
                    "memorySize": "128",
                    "name": "todo035b5d8f-01e92d475a2f3002",
                    "publish": false,
                    "timeout": "180"
                },
                "outputs": {
                    "arn": "arn:aws:lambda:us-east-2:153052954103:function:todo035b5d8f-01e92d475a2f3002",
                    "code": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-archive-for-tf912533084",
                    "deadLetterConfig": [
                        {
                            "targetArn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-d395f4579a387f1f"
                        }
                    ],
                    "description": "",
                    "environment": [],
                    "handler": "__index.handler",
                    "id": "todo035b5d8f-01e92d475a2f3002",
                    "invokeArn": "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todo035b5d8f-01e92d475a2f3002/invocations",
                    "kmsKeyArn": "",
                    "lastModified": "2017-10-20T06:42:13.759+0000",
                    "memorySize": "128",
                    "name": "todo035b5d8f-01e92d475a2f3002",
                    "publish": false,
                    "qualifiedArn": "arn:aws:lambda:us-east-2:153052954103:function:todo035b5d8f-01e92d475a2f3002:$LATEST",
                    "role": "arn:aws:iam::153052954103:role/todo035b5d8f-iamrole-b900fc55ae6d773c",
                    "runtime": "nodejs6.10",
                    "sourceCodeHash": "F6JFPOyDQX79/x6laEFd7pu4TfJVRIJ+dAltks+SQ8Y=",
                    "tags": {},
                    "timeout": "180",
                    "tracingConfig": [
                        {
                            "mode": "PassThrough"
                        }
                    ],
                    "version": "$LATEST",
                    "vpcConfig": []
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:serverless:Function::todo035b5d8f",
                "custom": false,
                "type": "aws:serverless:Function",
                "inputs": {
                    "options": {
                        "deadLetterConfig": {
                            "targetArn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-d395f4579a387f1f"
                        },
                        "policies": [
                            "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                            "arn:aws:iam::aws:policy/AmazonEC2ContainerServiceFullAccess"
                        ]
                    }
                },
                "children": [
                    "urn:pulumi:foo::todo::aws:iam/role:Role::todo035b5d8f-iamrole",
                    "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todo035b5d8f-iampolicy-0",
                    "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todo035b5d8f-iampolicy-1",
                    "urn:pulumi:foo::todo::aws:lambda/function:Function::todo035b5d8f"
                ]
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:cloudwatch/logGroup:LogGroup::todo035b5d8f-func-logs",
                "custom": true,
                "id": "/aws/lambda/todo035b5d8f-01e92d475a2f3002",
                "type": "aws:cloudwatch/logGroup:LogGroup",
                "inputs": {
                    "name": "/aws/lambda/todo035b5d8f-01e92d475a2f3002",
                    "retentionInDays": 1
                },
                "defaults": {
                    "retentionInDays": "1"
                },
                "outputs": {
                    "arn": "arn:aws:logs:us-east-2:153052954103:log-group:/aws/lambda/todo035b5d8f-01e92d475a2f3002:*",
                    "id": "/aws/lambda/todo035b5d8f-01e92d475a2f3002",
                    "name": "/aws/lambda/todo035b5d8f-01e92d475a2f3002",
                    "retentionInDays": "1",
                    "tags": {}
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:iam/role:Role::pulumi-app-log-collector-iamrole",
                "custom": true,
                "id": "pulumi-app-log-collector-iamrole-ccee99ebf9f5e2ce",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Effect\":\"Allow\",\"Sid\":\"\"}]}"
                },
                "defaults": {
                    "forceDetachPolicies": false,
                    "name": "pulumi-app-log-collector-iamrole-ccee99ebf9f5e2ce",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::153052954103:role/pulumi-app-log-collector-iamrole-ccee99ebf9f5e2ce",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2017-10-20T06:42:17Z",
                    "forceDetachPolicies": false,
                    "id": "pulumi-app-log-collector-iamrole-ccee99ebf9f5e2ce",
                    "name": "pulumi-app-log-collector-iamrole-ccee99ebf9f5e2ce",
                    "path": "/",
                    "uniqueId": "AROAIBRQUWLWMATK5VJOQ"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::pulumi-app-log-collector-iampolicy-0",
                "custom": true,
                "id": "pulumi-app-log-collector-iamrole-ccee99ebf9f5e2ce-20171020064218127200000005",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "policyArn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "role": "pulumi-app-log-collector-iamrole-ccee99ebf9f5e2ce"
                },
                "outputs": {
                    "id": "pulumi-app-log-collector-iamrole-ccee99ebf9f5e2ce-20171020064218127200000005",
                    "policyArn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "role": "pulumi-app-log-collector-iamrole-ccee99ebf9f5e2ce"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:lambda/function:Function::pulumi-app-log-collector",
                "custom": true,
                "id": "pulumi-app-log-collector-20cd6ac59aa2507c",
                "type": "aws:lambda/function:Function",
                "inputs": {
                    "code": {
                        "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                        "assets": {
                            ".": {
                                "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                                "path": ".",
                                "text": "",
                                "uri": ""
                            },
                            "__index.js": {
                                "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                                "path": "",
                                "text": "exports.handler = __88442d0b4365f25c858d35485cca4f999253cc40;\n\nfunction __88442d0b4365f25c858d35485cca4f999253cc40() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn ((ev, ctx, cb) =\u003e {\n            const zlib = require(\"zlib\");\n            const payload = new Buffer(ev.awslogs.data, \"base64\");\n            zlib.gunzip(payload, (err, result) =\u003e {\n                if (err !== undefined \u0026\u0026 err !== null) {\n                    cb(err, null);\n                }\n                else {\n                    console.log(result.toString(\"utf8\"));\n                    cb(null, {});\n                }\n            });\n        })\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\n",
                                "uri": ""
                            }
                        },
                        "path": "",
                        "uri": ""
                    },
                    "handler": "__index.handler",
                    "role": "arn:aws:iam::153052954103:role/pulumi-app-log-collector-iamrole-ccee99ebf9f5e2ce",
                    "runtime": "nodejs6.10",
                    "timeout": 180
                },
                "defaults": {
                    "code": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-archive-for-tf781449739",
                    "memorySize": "128",
                    "name": "pulumi-app-log-collector-20cd6ac59aa2507c",
                    "publish": false,
                    "timeout": "180"
                },
                "outputs": {
                    "arn": "arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-20cd6ac59aa2507c",
                    "code": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-archive-for-tf579218926",
                    "deadLetterConfig": [],
                    "description": "",
                    "environment": [],
                    "handler": "__index.handler",
                    "id": "pulumi-app-log-collector-20cd6ac59aa2507c",
                    "invokeArn": "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-20cd6ac59aa2507c/invocations",
                    "kmsKeyArn": "",
                    "lastModified": "2017-10-20T06:42:30.579+0000",
                    "memorySize": "128",
                    "name": "pulumi-app-log-collector-20cd6ac59aa2507c",
                    "publish": false,
                    "qualifiedArn": "arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-20cd6ac59aa2507c:$LATEST",
                    "role": "arn:aws:iam::153052954103:role/pulumi-app-log-collector-iamrole-ccee99ebf9f5e2ce",
                    "runtime": "nodejs6.10",
                    "sourceCodeHash": "mJkdxrvdui+WuJZbekwzaM0g+Yvk2U/2nzY8Z3FpU9c=",
                    "tags": {},
                    "timeout": "180",
                    "tracingConfig": [
                        {
                            "mode": "PassThrough"
                        }
                    ],
                    "version": "$LATEST",
                    "vpcConfig": []
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:serverless:Function::pulumi-app-log-collector",
                "custom": false,
                "type": "aws:serverless:Function",
                "inputs": {
                    "options": {
                        "policies": [
                            "arn:aws:iam::aws:policy/AWSLambdaFullAccess"
                        ]
                    }
                },
                "children": [
                    "urn:pulumi:foo::todo::aws:iam/role:Role::pulumi-app-log-collector-iamrole",
                    "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::pulumi-app-log-collector-iampolicy-0",
                    "urn:pulumi:foo::todo::aws:lambda/function:Function::pulumi-app-log-collector"
                ]
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:lambda/permission:Permission::pulumi-app-log-collector",
                "custom": true,
                "id": "pulumi-app-log-collector-5bd8e00147df4a73",
                "type": "aws:lambda/permission:Permission",
                "inputs": {
                    "action": "lambda:invokeFunction",
                    "function": "pulumi-app-log-collector-20cd6ac59aa2507c",
                    "principal": "logs.us-east-2.amazonaws.com"
                },
                "defaults": {
                    "statementId": "pulumi-app-log-collector-5bd8e00147df4a73"
                },
                "outputs": {
                    "action": "lambda:invokeFunction",
                    "function": "pulumi-app-log-collector-20cd6ac59aa2507c",
                    "id": "pulumi-app-log-collector-5bd8e00147df4a73",
                    "principal": "logs.us-east-2.amazonaws.com",
                    "qualifier": "",
                    "statementId": "pulumi-app-log-collector-5bd8e00147df4a73"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:cloudwatch/logSubscriptionFilter:LogSubscriptionFilter::todo035b5d8f",
                "custom": true,
                "id": "cwlsf-1294222234",
                "type": "aws:cloudwatch/logSubscriptionFilter:LogSubscriptionFilter",
                "inputs": {
                    "destinationArn": "arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-20cd6ac59aa2507c",
                    "filterPattern": "",
                    "logGroup": "/aws/lambda/todo035b5d8f-01e92d475a2f3002"
                },
                "defaults": {
                    "name": "todo035b5d8f-7a06ad1187202097"
                },
                "outputs": {
                    "destinationArn": "arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-20cd6ac59aa2507c",
                    "filterPattern": "",
                    "id": "cwlsf-1294222234",
                    "logGroup": "/aws/lambda/todo035b5d8f-01e92d475a2f3002",
                    "name": "todo035b5d8f-7a06ad1187202097"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::cloud:function:Function::todo035b5d8f",
                "custom": false,
                "type": "cloud:function:Function",
                "inputs": {
                    "handler": {}
                },
                "children": [
                    "urn:pulumi:foo::todo::aws:cloudwatch/logGroup:LogGroup::todo035b5d8f-func-logs",
                    "urn:pulumi:foo::todo::aws:cloudwatch/logSubscriptionFilter:LogSubscriptionFilter::todo035b5d8f",
                    "urn:pulumi:foo::todo::aws:lambda/permission:Permission::pulumi-app-log-collector",
                    "urn:pulumi:foo::todo::aws:serverless:Function::todo035b5d8f"
                ]
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:iam/role:Role::todo67876f56-iamrole",
                "custom": true,
                "id": "todo67876f56-iamrole-61c45a96b062302d",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Effect\":\"Allow\",\"Sid\":\"\"}]}"
                },
                "defaults": {
                    "forceDetachPolicies": false,
                    "name": "todo67876f56-iamrole-61c45a96b062302d",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::153052954103:role/todo67876f56-iamrole-61c45a96b062302d",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2017-10-20T06:42:33Z",
                    "forceDetachPolicies": false,
                    "id": "todo67876f56-iamrole-61c45a96b062302d",
                    "name": "todo67876f56-iamrole-61c45a96b062302d",
                    "path": "/",
                    "uniqueId": "AROAJ2KDBESEVRT6HRW7K"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todo67876f56-iampolicy-0",
                "custom": true,
                "id": "todo67876f56-iamrole-61c45a96b062302d-20171020064234215400000006",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "policyArn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "role": "todo67876f56-iamrole-61c45a96b062302d"
                },
                "outputs": {
                    "id": "todo67876f56-iamrole-61c45a96b062302d-20171020064234215400000006",
                    "policyArn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "role": "todo67876f56-iamrole-61c45a96b062302d"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todo67876f56-iampolicy-1",
                "custom": true,
                "id": "todo67876f56-iamrole-61c45a96b062302d-20171020064235531600000007",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEC2ContainerServiceFullAccess",
                    "role": "todo67876f56-iamrole-61c45a96b062302d"
                },
                "outputs": {
                    "id": "todo67876f56-iamrole-61c45a96b062302d-20171020064235531600000007",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEC2ContainerServiceFullAccess",
                    "role": "todo67876f56-iamrole-61c45a96b062302d"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:lambda/function:Function::todo67876f56",
                "custom": true,
                "id": "todo67876f56-be844b7c0c9758c2",
                "type": "aws:lambda/function:Function",
                "inputs": {
                    "code": {
                        "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                        "assets": {
                            ".": {
                                "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                                "path": ".",
                                "text": "",
                                "uri": ""
                            },
                            "__index.js": {
                                "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                                "path": "",
                                "text": "exports.handler = __7c74d74151734202a59c2f3da300d507aecc991b;\n\nfunction __7c74d74151734202a59c2f3da300d507aecc991b() {\n  var _this;\n  with({ apiGatewayToRequestResponse: __fbf646106cb48cc5348746d6ce09d72037a0bb76, route: { method: \"POST\", path: \"/todo/{id}\", handlers: [ __35a500686411c57725585ed93fed02f48ad7c64b ] } }) {\n    return (function() {\n\nreturn ((ev, ctx, cb) =\u003e {\n                let body;\n                if (ev.body !== null) {\n                    if (ev.isBase64Encoded) {\n                        body = Buffer.from(ev.body, \"base64\");\n                    }\n                    else {\n                        body = Buffer.from(ev.body, \"utf8\");\n                    }\n                }\n                ctx.callbackWaitsForEmptyEventLoop = false;\n                const reqres = apiGatewayToRequestResponse(ev, body, cb);\n                let i = 0;\n                const next = () =\u003e {\n                    const nextHandler = route.handlers[i++];\n                    if (nextHandler !== undefined) {\n                        nextHandler(reqres.req, reqres.res, next);\n                    }\n                };\n                next();\n            })\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __fbf646106cb48cc5348746d6ce09d72037a0bb76() {\n  var _this;\n  with({ stageName: \"stage\" }) {\n    return (function() {\n\nreturn (function apiGatewayToRequestResponse(ev, body, cb) {\n    const response = {\n        statusCode: 200,\n        headers: {},\n        body: Buffer.from([]),\n    };\n    const req = {\n        headers: ev.headers,\n        body: body,\n        method: ev.httpMethod,\n        params: ev.pathParameters,\n        query: ev.queryStringParameters,\n        path: ev.path,\n        baseUrl: \"/\" + stageName,\n        hostname: ev.headers[\"Host\"],\n        protocol: ev.headers[\"X-Forwarded-Proto\"],\n    };\n    const res = {\n        status: (code) =\u003e {\n            response.statusCode = code;\n            return res;\n        },\n        setHeader: (name, value) =\u003e {\n            response.headers[name] = value;\n            return res;\n        },\n        write: (data, encoding) =\u003e {\n            if (encoding === undefined) {\n                encoding = \"utf8\";\n            }\n            if (typeof data === \"string\") {\n                data = Buffer.from(data, encoding);\n            }\n            response.body = Buffer.concat([response.body, data]);\n            return res;\n        },\n        end: (data, encoding) =\u003e {\n            if (data !== undefined) {\n                res.write(data, encoding);\n            }\n            cb(null, {\n                statusCode: response.statusCode,\n                headers: response.headers,\n                isBase64Encoded: true,\n                body: response.body.toString(\"base64\"),\n            });\n        },\n        json: (obj) =\u003e {\n            res.setHeader(\"content-type\", \"application/json\");\n            res.end(JSON.stringify(obj));\n        },\n    };\n    return { req, res };\n})\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __35a500686411c57725585ed93fed02f48ad7c64b() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, todos: { children: [ { children: [  ], urn: \"urn:pulumi:foo::todo::aws:dynamodb/table:Table::todo\", id: \"todo-8395138762012adb\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-8395138762012adb\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-8395138762012adb\" } ], urn: \"urn:pulumi:foo::todo::cloud:table:Table::todo\", primaryKey: \"id\", primaryKeyType: \"string\", get: __de12b166a364a9769984c51313b4328acef95ec9, insert: __9fc3e6ad61b50294e8234ce81d7f555b55a55b14, scan: __33f0f539657556dd7113c9c283470525c3520e2f, update: __18824dffdc9492ac299f7927ff814407db751f5b, delete: __0a58bec212683a7542edd8c369785e7d05a2471e } }) {\n    return (function() {\n\nreturn ((req, res) =\u003e __awaiter(this, void 0, void 0, function* () {\n    console.log(\"POST /todo/\" + req.params[\"id\"]);\n    try {\n        yield todos.insert({ id: req.params[\"id\"], value: req.body.toString() });\n        res.status(201).json({});\n    }\n    catch (err) {\n        res.status(500).json(err);\n    }\n}))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __492fe142c8be132f2ccfdc443ed720d77b1ef3a6() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn (function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n})\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __de12b166a364a9769984c51313b4328acef95ec9() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, db: __32fa8104bfb1107c90c2d18cfcadb353e7323c4c, getTableName: __c07e3bd4cfe020892784d1c8d199d2c579e71cb6 }) {\n    return (function() {\n\nreturn ((query) =\u003e __awaiter(this, void 0, void 0, function* () {\n            const result = yield db().get({\n                TableName: getTableName(),\n                Key: query,\n                ConsistentRead: true,\n            }).promise();\n            return result.Item;\n        }))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __32fa8104bfb1107c90c2d18cfcadb353e7323c4c() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn (() =\u003e {\n            const awssdk = require(\"aws-sdk\");\n            return new awssdk.DynamoDB.DocumentClient();\n        })\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __c07e3bd4cfe020892784d1c8d199d2c579e71cb6() {\n  var _this;\n  with({ tableName: \"todo-8395138762012adb\" }) {\n    return (function() {\n\nreturn (function getTableName() {\n            // Hack: Because of our outside/inside system for pulumi, tableName is seen as a\n            // Computed\u003cstring\u003e on the outside, but a string on the inside. Of course, there's no\n            // way to make TypeScript aware of that.  So we just fool the typesystem with these\n            // explicit casts.\n            //\n            // see: https://github.com/pulumi/pulumi/issues/331#issuecomment-333280955\n            return tableName;\n        })\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __9fc3e6ad61b50294e8234ce81d7f555b55a55b14() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, db: __32fa8104bfb1107c90c2d18cfcadb353e7323c4c, getTableName: __c07e3bd4cfe020892784d1c8d199d2c579e71cb6 }) {\n    return (function() {\n\nreturn ((item) =\u003e __awaiter(this, void 0, void 0, function* () {\n            yield db().put({\n                TableName: getTableName(),\n                Item: item,\n            }).promise();\n        }))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __33f0f539657556dd7113c9c283470525c3520e2f() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, db: __32fa8104bfb1107c90c2d18cfcadb353e7323c4c, getTableName: __c07e3bd4cfe020892784d1c8d199d2c579e71cb6 }) {\n    return (function() {\n\nreturn (() =\u003e __awaiter(this, void 0, void 0, function* () {\n            const result = yield db().scan({\n                TableName: getTableName(),\n                ConsistentRead: true,\n            }).promise();\n            return result.Items;\n        }))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __18824dffdc9492ac299f7927ff814407db751f5b() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, db: __32fa8104bfb1107c90c2d18cfcadb353e7323c4c, getTableName: __c07e3bd4cfe020892784d1c8d199d2c579e71cb6 }) {\n    return (function() {\n\nreturn ((query, updates) =\u003e __awaiter(this, void 0, void 0, function* () {\n            let updateExpression = \"\";\n            const attributeValues = {};\n            for (const key of Object.keys(updates)) {\n                const val = updates[key];\n                if (updateExpression === \"\") {\n                    updateExpression += \"SET \";\n                }\n                else {\n                    updateExpression += \", \";\n                }\n                updateExpression += `${key} = :${key}`;\n                attributeValues[`:${key}`] = val;\n            }\n            yield db().update({\n                TableName: getTableName(),\n                Key: query,\n                UpdateExpression: updateExpression,\n                ExpressionAttributeValues: attributeValues,\n            }).promise();\n        }))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __0a58bec212683a7542edd8c369785e7d05a2471e() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, db: __32fa8104bfb1107c90c2d18cfcadb353e7323c4c, getTableName: __c07e3bd4cfe020892784d1c8d199d2c579e71cb6 }) {\n    return (function() {\n\nreturn ((query) =\u003e __awaiter(this, void 0, void 0, function* () {\n            yield db().delete({\n                TableName: getTableName(),\n                Key: query,\n            }).promise();\n        }))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\n",
                                "uri": ""
                            }
                        },
                        "path": "",
                        "uri": ""
                    },
                    "deadLetterConfig": [
                        {
                            "targetArn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-d395f4579a387f1f"
                        }
                    ],
                    "handler": "__index.handler",
                    "role": "arn:aws:iam::153052954103:role/todo67876f56-iamrole-61c45a96b062302d",
                    "runtime": "nodejs6.10",
                    "timeout": 180
                },
                "defaults": {
                    "code": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-archive-for-tf936567413",
                    "memorySize": "128",
                    "name": "todo67876f56-be844b7c0c9758c2",
                    "publish": false,
                    "timeout": "180"
                },
                "outputs": {
                    "arn": "arn:aws:lambda:us-east-2:153052954103:function:todo67876f56-be844b7c0c9758c2",
                    "code": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-archive-for-tf902566224",
                    "deadLetterConfig": [
                        {
                            "targetArn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-d395f4579a387f1f"
                        }
                    ],
                    "description": "",
                    "environment": [],
                    "handler": "__index.handler",
                    "id": "todo67876f56-be844b7c0c9758c2",
                    "invokeArn": "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todo67876f56-be844b7c0c9758c2/invocations",
                    "kmsKeyArn": "",
                    "lastModified": "2017-10-20T06:42:43.241+0000",
                    "memorySize": "128",
                    "name": "todo67876f56-be844b7c0c9758c2",
                    "publish": false,
                    "qualifiedArn": "arn:aws:lambda:us-east-2:153052954103:function:todo67876f56-be844b7c0c9758c2:$LATEST",
                    "role": "arn:aws:iam::153052954103:role/todo67876f56-iamrole-61c45a96b062302d",
                    "runtime": "nodejs6.10",
                    "sourceCodeHash": "10/HpshPTsJ8h1UGpsS77CXUL+rn++423CT9WsYiscg=",
                    "tags": {},
                    "timeout": "180",
                    "tracingConfig": [
                        {
                            "mode": "PassThrough"
                        }
                    ],
                    "version": "$LATEST",
                    "vpcConfig": []
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:serverless:Function::todo67876f56",
                "custom": false,
                "type": "aws:serverless:Function",
                "inputs": {
                    "options": {
                        "deadLetterConfig": {
                            "targetArn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-d395f4579a387f1f"
                        },
                        "policies": [
                            "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                            "arn:aws:iam::aws:policy/AmazonEC2ContainerServiceFullAccess"
                        ]
                    }
                },
                "children": [
                    "urn:pulumi:foo::todo::aws:iam/role:Role::todo67876f56-iamrole",
                    "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todo67876f56-iampolicy-0",
                    "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todo67876f56-iampolicy-1",
                    "urn:pulumi:foo::todo::aws:lambda/function:Function::todo67876f56"
                ]
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:cloudwatch/logGroup:LogGroup::todo67876f56-func-logs",
                "custom": true,
                "id": "/aws/lambda/todo67876f56-be844b7c0c9758c2",
                "type": "aws:cloudwatch/logGroup:LogGroup",
                "inputs": {
                    "name": "/aws/lambda/todo67876f56-be844b7c0c9758c2",
                    "retentionInDays": 1
                },
                "defaults": {
                    "retentionInDays": "1"
                },
                "outputs": {
                    "arn": "arn:aws:logs:us-east-2:153052954103:log-group:/aws/lambda/todo67876f56-be844b7c0c9758c2:*",
                    "id": "/aws/lambda/todo67876f56-be844b7c0c9758c2",
                    "name": "/aws/lambda/todo67876f56-be844b7c0c9758c2",
                    "retentionInDays": "1",
                    "tags": {}
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:cloudwatch/logSubscriptionFilter:LogSubscriptionFilter::todo67876f56",
                "custom": true,
                "id": "cwlsf-3520794213",
                "type": "aws:cloudwatch/logSubscriptionFilter:LogSubscriptionFilter",
                "inputs": {
                    "destinationArn": "arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-20cd6ac59aa2507c",
                    "filterPattern": "",
                    "logGroup": "/aws/lambda/todo67876f56-be844b7c0c9758c2"
                },
                "defaults": {
                    "name": "todo67876f56-6a51de8c67f006e9"
                },
                "outputs": {
                    "destinationArn": "arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-20cd6ac59aa2507c",
                    "filterPattern": "",
                    "id": "cwlsf-3520794213",
                    "logGroup": "/aws/lambda/todo67876f56-be844b7c0c9758c2",
                    "name": "todo67876f56-6a51de8c67f006e9"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::cloud:function:Function::todo67876f56",
                "custom": false,
                "type": "cloud:function:Function",
                "inputs": {
                    "handler": {}
                },
                "children": [
                    "urn:pulumi:foo::todo::aws:cloudwatch/logGroup:LogGroup::todo67876f56-func-logs",
                    "urn:pulumi:foo::todo::aws:cloudwatch/logSubscriptionFilter:LogSubscriptionFilter::todo67876f56",
                    "urn:pulumi:foo::todo::aws:serverless:Function::todo67876f56"
                ]
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:iam/role:Role::todoc57917fa-iamrole",
                "custom": true,
                "id": "todoc57917fa-iamrole-5ce0ff98b6f67a26",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Effect\":\"Allow\",\"Sid\":\"\"}]}"
                },
                "defaults": {
                    "forceDetachPolicies": false,
                    "name": "todoc57917fa-iamrole-5ce0ff98b6f67a26",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::153052954103:role/todoc57917fa-iamrole-5ce0ff98b6f67a26",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2017-10-20T06:42:46Z",
                    "forceDetachPolicies": false,
                    "id": "todoc57917fa-iamrole-5ce0ff98b6f67a26",
                    "name": "todoc57917fa-iamrole-5ce0ff98b6f67a26",
                    "path": "/",
                    "uniqueId": "AROAJASWVCWXI4GA4Q3VC"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todoc57917fa-iampolicy-0",
                "custom": true,
                "id": "todoc57917fa-iamrole-5ce0ff98b6f67a26-20171020064247731200000008",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "policyArn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "role": "todoc57917fa-iamrole-5ce0ff98b6f67a26"
                },
                "outputs": {
                    "id": "todoc57917fa-iamrole-5ce0ff98b6f67a26-20171020064247731200000008",
                    "policyArn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "role": "todoc57917fa-iamrole-5ce0ff98b6f67a26"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todoc57917fa-iampolicy-1",
                "custom": true,
                "id": "todoc57917fa-iamrole-5ce0ff98b6f67a26-20171020064249014200000009",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEC2ContainerServiceFullAccess",
                    "role": "todoc57917fa-iamrole-5ce0ff98b6f67a26"
                },
                "outputs": {
                    "id": "todoc57917fa-iamrole-5ce0ff98b6f67a26-20171020064249014200000009",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEC2ContainerServiceFullAccess",
                    "role": "todoc57917fa-iamrole-5ce0ff98b6f67a26"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:lambda/function:Function::todoc57917fa",
                "custom": true,
                "id": "todoc57917fa-717c40d76ccd116d",
                "type": "aws:lambda/function:Function",
                "inputs": {
                    "code": {
                        "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                        "assets": {
                            ".": {
                                "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                                "path": ".",
                                "text": "",
                                "uri": ""
                            },
                            "__index.js": {
                                "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                                "path": "",
                                "text": "exports.handler = __87663c503d620ecfb2d3158737037a4a34c8dfbc;\n\nfunction __87663c503d620ecfb2d3158737037a4a34c8dfbc() {\n  var _this;\n  with({ apiGatewayToRequestResponse: __fbf646106cb48cc5348746d6ce09d72037a0bb76, route: { method: \"GET\", path: \"/todo\", handlers: [ __57972c1ada328326370fa1c379d5c22249b4a5f7 ] } }) {\n    return (function() {\n\nreturn ((ev, ctx, cb) =\u003e {\n                let body;\n                if (ev.body !== null) {\n                    if (ev.isBase64Encoded) {\n                        body = Buffer.from(ev.body, \"base64\");\n                    }\n                    else {\n                        body = Buffer.from(ev.body, \"utf8\");\n                    }\n                }\n                ctx.callbackWaitsForEmptyEventLoop = false;\n                const reqres = apiGatewayToRequestResponse(ev, body, cb);\n                let i = 0;\n                const next = () =\u003e {\n                    const nextHandler = route.handlers[i++];\n                    if (nextHandler !== undefined) {\n                        nextHandler(reqres.req, reqres.res, next);\n                    }\n                };\n                next();\n            })\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __fbf646106cb48cc5348746d6ce09d72037a0bb76() {\n  var _this;\n  with({ stageName: \"stage\" }) {\n    return (function() {\n\nreturn (function apiGatewayToRequestResponse(ev, body, cb) {\n    const response = {\n        statusCode: 200,\n        headers: {},\n        body: Buffer.from([]),\n    };\n    const req = {\n        headers: ev.headers,\n        body: body,\n        method: ev.httpMethod,\n        params: ev.pathParameters,\n        query: ev.queryStringParameters,\n        path: ev.path,\n        baseUrl: \"/\" + stageName,\n        hostname: ev.headers[\"Host\"],\n        protocol: ev.headers[\"X-Forwarded-Proto\"],\n    };\n    const res = {\n        status: (code) =\u003e {\n            response.statusCode = code;\n            return res;\n        },\n        setHeader: (name, value) =\u003e {\n            response.headers[name] = value;\n            return res;\n        },\n        write: (data, encoding) =\u003e {\n            if (encoding === undefined) {\n                encoding = \"utf8\";\n            }\n            if (typeof data === \"string\") {\n                data = Buffer.from(data, encoding);\n            }\n            response.body = Buffer.concat([response.body, data]);\n            return res;\n        },\n        end: (data, encoding) =\u003e {\n            if (data !== undefined) {\n                res.write(data, encoding);\n            }\n            cb(null, {\n                statusCode: response.statusCode,\n                headers: response.headers,\n                isBase64Encoded: true,\n                body: response.body.toString(\"base64\"),\n            });\n        },\n        json: (obj) =\u003e {\n            res.setHeader(\"content-type\", \"application/json\");\n            res.end(JSON.stringify(obj));\n        },\n    };\n    return { req, res };\n})\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __57972c1ada328326370fa1c379d5c22249b4a5f7() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, todos: { children: [ { children: [  ], urn: \"urn:pulumi:foo::todo::aws:dynamodb/table:Table::todo\", id: \"todo-8395138762012adb\", attribute: [ { name: \"id\", type: \"S\" } ], globalSecondaryIndex: [  ], hashKey: \"id\", localSecondaryIndex: [  ], name: \"todo-8395138762012adb\", readCapacity: \"5\", writeCapacity: \"5\", arn: \"arn:aws:dynamodb:us-east-2:153052954103:table/todo-8395138762012adb\" } ], urn: \"urn:pulumi:foo::todo::cloud:table:Table::todo\", primaryKey: \"id\", primaryKeyType: \"string\", get: __de12b166a364a9769984c51313b4328acef95ec9, insert: __9fc3e6ad61b50294e8234ce81d7f555b55a55b14, scan: __33f0f539657556dd7113c9c283470525c3520e2f, update: __18824dffdc9492ac299f7927ff814407db751f5b, delete: __0a58bec212683a7542edd8c369785e7d05a2471e } }) {\n    return (function() {\n\nreturn ((req, res) =\u003e __awaiter(this, void 0, void 0, function* () {\n    console.log(\"GET /todo\");\n    try {\n        let items = yield todos.scan();\n        res.status(200).json(items);\n    }\n    catch (err) {\n        res.status(500).json(err);\n    }\n}))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __492fe142c8be132f2ccfdc443ed720d77b1ef3a6() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn (function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n})\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __de12b166a364a9769984c51313b4328acef95ec9() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, db: __32fa8104bfb1107c90c2d18cfcadb353e7323c4c, getTableName: __c07e3bd4cfe020892784d1c8d199d2c579e71cb6 }) {\n    return (function() {\n\nreturn ((query) =\u003e __awaiter(this, void 0, void 0, function* () {\n            const result = yield db().get({\n                TableName: getTableName(),\n                Key: query,\n                ConsistentRead: true,\n            }).promise();\n            return result.Item;\n        }))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __32fa8104bfb1107c90c2d18cfcadb353e7323c4c() {\n  var _this;\n  with({  }) {\n    return (function() {\n\nreturn (() =\u003e {\n            const awssdk = require(\"aws-sdk\");\n            return new awssdk.DynamoDB.DocumentClient();\n        })\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __c07e3bd4cfe020892784d1c8d199d2c579e71cb6() {\n  var _this;\n  with({ tableName: \"todo-8395138762012adb\" }) {\n    return (function() {\n\nreturn (function getTableName() {\n            // Hack: Because of our outside/inside system for pulumi, tableName is seen as a\n            // Computed\u003cstring\u003e on the outside, but a string on the inside. Of course, there's no\n            // way to make TypeScript aware of that.  So we just fool the typesystem with these\n            // explicit casts.\n            //\n            // see: https://github.com/pulumi/pulumi/issues/331#issuecomment-333280955\n            return tableName;\n        })\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __9fc3e6ad61b50294e8234ce81d7f555b55a55b14() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, db: __32fa8104bfb1107c90c2d18cfcadb353e7323c4c, getTableName: __c07e3bd4cfe020892784d1c8d199d2c579e71cb6 }) {\n    return (function() {\n\nreturn ((item) =\u003e __awaiter(this, void 0, void 0, function* () {\n            yield db().put({\n                TableName: getTableName(),\n                Item: item,\n            }).promise();\n        }))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __33f0f539657556dd7113c9c283470525c3520e2f() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, db: __32fa8104bfb1107c90c2d18cfcadb353e7323c4c, getTableName: __c07e3bd4cfe020892784d1c8d199d2c579e71cb6 }) {\n    return (function() {\n\nreturn (() =\u003e __awaiter(this, void 0, void 0, function* () {\n            const result = yield db().scan({\n                TableName: getTableName(),\n                ConsistentRead: true,\n            }).promise();\n            return result.Items;\n        }))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __18824dffdc9492ac299f7927ff814407db751f5b() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, db: __32fa8104bfb1107c90c2d18cfcadb353e7323c4c, getTableName: __c07e3bd4cfe020892784d1c8d199d2c579e71cb6 }) {\n    return (function() {\n\nreturn ((query, updates) =\u003e __awaiter(this, void 0, void 0, function* () {\n            let updateExpression = \"\";\n            const attributeValues = {};\n            for (const key of Object.keys(updates)) {\n                const val = updates[key];\n                if (updateExpression === \"\") {\n                    updateExpression += \"SET \";\n                }\n                else {\n                    updateExpression += \", \";\n                }\n                updateExpression += `${key} = :${key}`;\n                attributeValues[`:${key}`] = val;\n            }\n            yield db().update({\n                TableName: getTableName(),\n                Key: query,\n                UpdateExpression: updateExpression,\n                ExpressionAttributeValues: attributeValues,\n            }).promise();\n        }))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\nfunction __0a58bec212683a7542edd8c369785e7d05a2471e() {\n  var _this;\n  with({ __awaiter: __492fe142c8be132f2ccfdc443ed720d77b1ef3a6, db: __32fa8104bfb1107c90c2d18cfcadb353e7323c4c, getTableName: __c07e3bd4cfe020892784d1c8d199d2c579e71cb6 }) {\n    return (function() {\n\nreturn ((query) =\u003e __awaiter(this, void 0, void 0, function* () {\n            yield db().delete({\n                TableName: getTableName(),\n                Key: query,\n            }).promise();\n        }))\n\n    }).apply(_this).apply(this, arguments);\n  }\n}\n\n",
                                "uri": ""
                            }
                        },
                        "path": "",
                        "uri": ""
                    },
                    "deadLetterConfig": [
                        {
                            "targetArn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-d395f4579a387f1f"
                        }
                    ],
                    "handler": "__index.handler",
                    "role": "arn:aws:iam::153052954103:role/todoc57917fa-iamrole-5ce0ff98b6f67a26",
                    "runtime": "nodejs6.10",
                    "timeout": 180
                },
                "defaults": {
                    "code": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-archive-for-tf152472687",
                    "memorySize": "128",
                    "name": "todoc57917fa-717c40d76ccd116d",
                    "publish": false,
                    "timeout": "180"
                },
                "outputs": {
                    "arn": "arn:aws:lambda:us-east-2:153052954103:function:todoc57917fa-717c40d76ccd116d",
                    "code": "/var/folders/h7/n3r2j28517g5bbvlkn1l_h_80000gn/T/lumi-archive-for-tf448812802",
                    "deadLetterConfig": [
                        {
                            "targetArn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-d395f4579a387f1f"
                        }
                    ],
                    "description": "",
                    "environment": [],
                    "handler": "__index.handler",
                    "id": "todoc57917fa-717c40d76ccd116d",
                    "invokeArn": "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todoc57917fa-717c40d76ccd116d/invocations",
                    "kmsKeyArn": "",
                    "lastModified": "2017-10-20T06:42:56.728+0000",
                    "memorySize": "128",
                    "name": "todoc57917fa-717c40d76ccd116d",
                    "publish": false,
                    "qualifiedArn": "arn:aws:lambda:us-east-2:153052954103:function:todoc57917fa-717c40d76ccd116d:$LATEST",
                    "role": "arn:aws:iam::153052954103:role/todoc57917fa-iamrole-5ce0ff98b6f67a26",
                    "runtime": "nodejs6.10",
                    "sourceCodeHash": "Csfv3RxoKJN+FWBz564NcfkygEREzscStwvWgtT59+4=",
                    "tags": {},
                    "timeout": "180",
                    "tracingConfig": [
                        {
                            "mode": "PassThrough"
                        }
                    ],
                    "version": "$LATEST",
                    "vpcConfig": []
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:serverless:Function::todoc57917fa",
                "custom": false,
                "type": "aws:serverless:Function",
                "inputs": {
                    "options": {
                        "deadLetterConfig": {
                            "targetArn": "arn:aws:sns:us-east-2:153052954103:unhandled-error-topic-d395f4579a387f1f"
                        },
                        "policies": [
                            "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                            "arn:aws:iam::aws:policy/AmazonEC2ContainerServiceFullAccess"
                        ]
                    }
                },
                "children": [
                    "urn:pulumi:foo::todo::aws:iam/role:Role::todoc57917fa-iamrole",
                    "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todoc57917fa-iampolicy-0",
                    "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todoc57917fa-iampolicy-1",
                    "urn:pulumi:foo::todo::aws:lambda/function:Function::todoc57917fa"
                ]
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:cloudwatch/logGroup:LogGroup::todoc57917fa-func-logs",
                "custom": true,
                "id": "/aws/lambda/todoc57917fa-717c40d76ccd116d",
                "type": "aws:cloudwatch/logGroup:LogGroup",
                "inputs": {
                    "name": "/aws/lambda/todoc57917fa-717c40d76ccd116d",
                    "retentionInDays": 1
                },
                "defaults": {
                    "retentionInDays": "1"
                },
                "outputs": {
                    "arn": "arn:aws:logs:us-east-2:153052954103:log-group:/aws/lambda/todoc57917fa-717c40d76ccd116d:*",
                    "id": "/aws/lambda/todoc57917fa-717c40d76ccd116d",
                    "name": "/aws/lambda/todoc57917fa-717c40d76ccd116d",
                    "retentionInDays": "1",
                    "tags": {}
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:cloudwatch/logSubscriptionFilter:LogSubscriptionFilter::todoc57917fa",
                "custom": true,
                "id": "cwlsf-2197341095",
                "type": "aws:cloudwatch/logSubscriptionFilter:LogSubscriptionFilter",
                "inputs": {
                    "destinationArn": "arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-20cd6ac59aa2507c",
                    "filterPattern": "",
                    "logGroup": "/aws/lambda/todoc57917fa-717c40d76ccd116d"
                },
                "defaults": {
                    "name": "todoc57917fa-b91e01ef47a659bc"
                },
                "outputs": {
                    "destinationArn": "arn:aws:lambda:us-east-2:153052954103:function:pulumi-app-log-collector-20cd6ac59aa2507c",
                    "filterPattern": "",
                    "id": "cwlsf-2197341095",
                    "logGroup": "/aws/lambda/todoc57917fa-717c40d76ccd116d",
                    "name": "todoc57917fa-b91e01ef47a659bc"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::cloud:function:Function::todoc57917fa",
                "custom": false,
                "type": "cloud:function:Function",
                "inputs": {
                    "handler": {}
                },
                "children": [
                    "urn:pulumi:foo::todo::aws:cloudwatch/logGroup:LogGroup::todoc57917fa-func-logs",
                    "urn:pulumi:foo::todo::aws:cloudwatch/logSubscriptionFilter:LogSubscriptionFilter::todoc57917fa",
                    "urn:pulumi:foo::todo::aws:serverless:Function::todoc57917fa"
                ]
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:apigateway/restApi:RestApi::todo",
                "custom": true,
                "id": "a3g797nzxd",
                "type": "aws:apigateway/restApi:RestApi",
                "inputs": {
                    "body": "{\"swagger\":\"2.0\",\"info\":{\"title\":\"todo\",\"version\":\"1.0\"},\"paths\":{\"/\":{\"get\":{\"responses\":{\"200\":{\"description\":\"200 response\",\"schema\":{\"type\":\"object\"},\"headers\":{\"Content-Type\":{\"type\":\"string\"},\"content-type\":{\"type\":\"string\"}}},\"400\":{\"description\":\"400 response\"},\"500\":{\"description\":\"500 response\"}},\"x-amazon-apigateway-integration\":{\"credentials\":\"arn:aws:iam::153052954103:role/todo4c238266-99cb373551027ad8\",\"uri\":\"arn:aws:apigateway:us-east-2:s3:path/todo-e08f327d4a75b420/todo4c238266\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"GET\",\"type\":\"aws\",\"responses\":{\"4\\\\d{2}\":{\"statusCode\":\"400\"},\"default\":{\"statusCode\":\"200\",\"responseParameters\":{\"method.response.header.Content-Type\":\"integration.response.header.Content-Type\",\"method.response.header.content-type\":\"integration.response.header.content-type\"}},\"5\\\\d{2}\":{\"statusCode\":\"500\"}}}}},\"/favicon.ico\":{\"get\":{\"responses\":{\"200\":{\"description\":\"200 response\",\"schema\":{\"type\":\"object\"},\"headers\":{\"Content-Type\":{\"type\":\"string\"},\"content-type\":{\"type\":\"string\"}}},\"400\":{\"description\":\"400 response\"},\"500\":{\"description\":\"500 response\"}},\"x-amazon-apigateway-integration\":{\"credentials\":\"arn:aws:iam::153052954103:role/todo84fe3e97-83e08289cd675da9\",\"uri\":\"arn:aws:apigateway:us-east-2:s3:path/todo-e08f327d4a75b420/todo84fe3e97\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"GET\",\"type\":\"aws\",\"responses\":{\"4\\\\d{2}\":{\"statusCode\":\"400\"},\"default\":{\"statusCode\":\"200\",\"responseParameters\":{\"method.response.header.Content-Type\":\"integration.response.header.Content-Type\",\"method.response.header.content-type\":\"integration.response.header.content-type\"}},\"5\\\\d{2}\":{\"statusCode\":\"500\"}}}}},\"/todo/{id}\":{\"get\":{\"x-amazon-apigateway-integration\":{\"uri\":\"arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todo035b5d8f-01e92d475a2f3002/invocations\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"POST\",\"type\":\"aws_proxy\"}},\"post\":{\"x-amazon-apigateway-integration\":{\"uri\":\"arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todo67876f56-be844b7c0c9758c2/invocations\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"POST\",\"type\":\"aws_proxy\"}}},\"/todo\":{\"get\":{\"x-amazon-apigateway-integration\":{\"uri\":\"arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todoc57917fa-717c40d76ccd116d/invocations\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"POST\",\"type\":\"aws_proxy\"}}}},\"x-amazon-apigateway-binary-media-types\":[\"*/*\"]}"
                },
                "defaults": {
                    "name": "todo-3dfbd6d26df60fda"
                },
                "outputs": {
                    "body": "{\"swagger\":\"2.0\",\"info\":{\"title\":\"todo\",\"version\":\"1.0\"},\"paths\":{\"/\":{\"get\":{\"responses\":{\"200\":{\"description\":\"200 response\",\"schema\":{\"type\":\"object\"},\"headers\":{\"Content-Type\":{\"type\":\"string\"},\"content-type\":{\"type\":\"string\"}}},\"400\":{\"description\":\"400 response\"},\"500\":{\"description\":\"500 response\"}},\"x-amazon-apigateway-integration\":{\"credentials\":\"arn:aws:iam::153052954103:role/todo4c238266-99cb373551027ad8\",\"uri\":\"arn:aws:apigateway:us-east-2:s3:path/todo-e08f327d4a75b420/todo4c238266\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"GET\",\"type\":\"aws\",\"responses\":{\"4\\\\d{2}\":{\"statusCode\":\"400\"},\"default\":{\"statusCode\":\"200\",\"responseParameters\":{\"method.response.header.Content-Type\":\"integration.response.header.Content-Type\",\"method.response.header.content-type\":\"integration.response.header.content-type\"}},\"5\\\\d{2}\":{\"statusCode\":\"500\"}}}}},\"/favicon.ico\":{\"get\":{\"responses\":{\"200\":{\"description\":\"200 response\",\"schema\":{\"type\":\"object\"},\"headers\":{\"Content-Type\":{\"type\":\"string\"},\"content-type\":{\"type\":\"string\"}}},\"400\":{\"description\":\"400 response\"},\"500\":{\"description\":\"500 response\"}},\"x-amazon-apigateway-integration\":{\"credentials\":\"arn:aws:iam::153052954103:role/todo84fe3e97-83e08289cd675da9\",\"uri\":\"arn:aws:apigateway:us-east-2:s3:path/todo-e08f327d4a75b420/todo84fe3e97\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"GET\",\"type\":\"aws\",\"responses\":{\"4\\\\d{2}\":{\"statusCode\":\"400\"},\"default\":{\"statusCode\":\"200\",\"responseParameters\":{\"method.response.header.Content-Type\":\"integration.response.header.Content-Type\",\"method.response.header.content-type\":\"integration.response.header.content-type\"}},\"5\\\\d{2}\":{\"statusCode\":\"500\"}}}}},\"/todo/{id}\":{\"get\":{\"x-amazon-apigateway-integration\":{\"uri\":\"arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todo035b5d8f-01e92d475a2f3002/invocations\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"POST\",\"type\":\"aws_proxy\"}},\"post\":{\"x-amazon-apigateway-integration\":{\"uri\":\"arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todo67876f56-be844b7c0c9758c2/invocations\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"POST\",\"type\":\"aws_proxy\"}}},\"/todo\":{\"get\":{\"x-amazon-apigateway-integration\":{\"uri\":\"arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:153052954103:function:todoc57917fa-717c40d76ccd116d/invocations\",\"passthroughBehavior\":\"when_no_match\",\"httpMethod\":\"POST\",\"type\":\"aws_proxy\"}}}},\"x-amazon-apigateway-binary-media-types\":[\"*/*\"]}",
                    "createdDate": "2017-10-20T06:43:00Z",
                    "description": "",
                    "id": "a3g797nzxd",
                    "name": "todo",
                    "rootResourceId": "22h87zk3pc"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:apigateway/deployment:Deployment::todo",
                "custom": true,
                "id": "ldg8kp",
                "type": "aws:apigateway/deployment:Deployment",
                "inputs": {
                    "description": "Deployment of version todo",
                    "restApi": "a3g797nzxd",
                    "stageName": ""
                },
                "outputs": {
                    "createdDate": "2017-10-20T06:43:03Z",
                    "description": "Deployment of version todo",
                    "executionArn": "arn:aws:execute-api:us-east-2:153052954103:a3g797nzxd/",
                    "id": "ldg8kp",
                    "invokeUrl": "https://a3g797nzxd.execute-api.us-east-2.amazonaws.com/",
                    "restApi": "a3g797nzxd",
                    "stageName": ""
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:apigateway/stage:Stage::todo",
                "custom": true,
                "id": "ags-a3g797nzxd-stage",
                "type": "aws:apigateway/stage:Stage",
                "inputs": {
                    "deployment": "ldg8kp",
                    "description": "The current deployment of the API.",
                    "restApi": "a3g797nzxd",
                    "stageName": "stage"
                },
                "outputs": {
                    "cacheClusterEnabled": false,
                    "cacheClusterSize": "",
                    "clientCertificateId": "",
                    "deployment": "ldg8kp",
                    "description": "The current deployment of the API.",
                    "documentationVersion": "",
                    "id": "ags-a3g797nzxd-stage",
                    "restApi": "a3g797nzxd",
                    "stageName": "stage",
                    "variables": {}
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:lambda/permission:Permission::todo_invoke_f0c1d77e",
                "custom": true,
                "id": "todo_invoke_f0c1d77e-2301a320ef793ecd",
                "type": "aws:lambda/permission:Permission",
                "inputs": {
                    "action": "lambda:invokeFunction",
                    "function": "todo035b5d8f-01e92d475a2f3002",
                    "principal": "apigateway.amazonaws.com",
                    "sourceArn": "arn:aws:execute-api:us-east-2:153052954103:a3g797nzxd/stage/GET/todo/{id}"
                },
                "defaults": {
                    "statementId": "todo_invoke_f0c1d77e-2301a320ef793ecd"
                },
                "outputs": {
                    "action": "lambda:invokeFunction",
                    "function": "todo035b5d8f-01e92d475a2f3002",
                    "id": "todo_invoke_f0c1d77e-2301a320ef793ecd",
                    "principal": "apigateway.amazonaws.com",
                    "qualifier": "",
                    "sourceArn": "arn:aws:execute-api:us-east-2:153052954103:a3g797nzxd/stage/GET/todo/{id}",
                    "statementId": "todo_invoke_f0c1d77e-2301a320ef793ecd"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:lambda/permission:Permission::todo_invoke_44308e8f",
                "custom": true,
                "id": "todo_invoke_44308e8f-754d11a3b16aa6b6",
                "type": "aws:lambda/permission:Permission",
                "inputs": {
                    "action": "lambda:invokeFunction",
                    "function": "todo67876f56-be844b7c0c9758c2",
                    "principal": "apigateway.amazonaws.com",
                    "sourceArn": "arn:aws:execute-api:us-east-2:153052954103:a3g797nzxd/stage/POST/todo/{id}"
                },
                "defaults": {
                    "statementId": "todo_invoke_44308e8f-754d11a3b16aa6b6"
                },
                "outputs": {
                    "action": "lambda:invokeFunction",
                    "function": "todo67876f56-be844b7c0c9758c2",
                    "id": "todo_invoke_44308e8f-754d11a3b16aa6b6",
                    "principal": "apigateway.amazonaws.com",
                    "qualifier": "",
                    "sourceArn": "arn:aws:execute-api:us-east-2:153052954103:a3g797nzxd/stage/POST/todo/{id}",
                    "statementId": "todo_invoke_44308e8f-754d11a3b16aa6b6"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::aws:lambda/permission:Permission::todo_invoke_a55f2cbc",
                "custom": true,
                "id": "todo_invoke_a55f2cbc-ecff3438d87d4559",
                "type": "aws:lambda/permission:Permission",
                "inputs": {
                    "action": "lambda:invokeFunction",
                    "function": "todoc57917fa-717c40d76ccd116d",
                    "principal": "apigateway.amazonaws.com",
                    "sourceArn": "arn:aws:execute-api:us-east-2:153052954103:a3g797nzxd/stage/GET/todo"
                },
                "defaults": {
                    "statementId": "todo_invoke_a55f2cbc-ecff3438d87d4559"
                },
                "outputs": {
                    "action": "lambda:invokeFunction",
                    "function": "todoc57917fa-717c40d76ccd116d",
                    "id": "todo_invoke_a55f2cbc-ecff3438d87d4559",
                    "principal": "apigateway.amazonaws.com",
                    "qualifier": "",
                    "sourceArn": "arn:aws:execute-api:us-east-2:153052954103:a3g797nzxd/stage/GET/todo",
                    "statementId": "todo_invoke_a55f2cbc-ecff3438d87d4559"
                }
            },
            {
                "urn": "urn:pulumi:foo::todo::cloud:http:HttpEndpoint::todo",
                "custom": false,
                "type": "cloud:http:HttpEndpoint",
                "inputs": {
                    "customDomainNames": [],
                    "customDomains": [],
                    "routes": [
                        {
                            "handlers": [
                                {},
                                {}
                            ],
                            "method": "GET",
                            "path": "/todo/{id}"
                        },
                        {
                            "handlers": [
                                {}
                            ],
                            "method": "POST",
                            "path": "/todo/{id}"
                        },
                        {
                            "handlers": [
                                {}
                            ],
                            "method": "GET",
                            "path": "/todo"
                        }
                    ],
                    "staticFiles": [
                        {
                            "contentType": "text/html",
                            "filePath": "index.html",
                            "path": "/"
                        },
                        {
                            "contentType": "image/x-icon",
                            "filePath": "favicon.ico",
                            "path": "/favicon.ico"
                        }
                    ],
                    "url": "https://a3g797nzxd.execute-api.us-east-2.amazonaws.com/"
                },
                "children": [
                    "urn:pulumi:foo::todo::aws:apigateway/deployment:Deployment::todo",
                    "urn:pulumi:foo::todo::aws:apigateway/restApi:RestApi::todo",
                    "urn:pulumi:foo::todo::aws:apigateway/stage:Stage::todo",
                    "urn:pulumi:foo::todo::aws:iam/role:Role::todo4c238266",
                    "urn:pulumi:foo::todo::aws:iam/role:Role::todo84fe3e97",
                    "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todo4c238266",
                    "urn:pulumi:foo::todo::aws:iam/rolePolicyAttachment:RolePolicyAttachment::todo84fe3e97",
                    "urn:pulumi:foo::todo::aws:lambda/permission:Permission::todo_invoke_44308e8f",
                    "urn:pulumi:foo::todo::aws:lambda/permission:Permission::todo_invoke_a55f2cbc",
                    "urn:pulumi:foo::todo::aws:lambda/permission:Permission::todo_invoke_f0c1d77e",
                    "urn:pulumi:foo::todo::aws:s3/bucket:Bucket::todo",
                    "urn:pulumi:foo::todo::aws:s3/bucketObject:BucketObject::todo4c238266",
                    "urn:pulumi:foo::todo::aws:s3/bucketObject:BucketObject::todo84fe3e97",
                    "urn:pulumi:foo::todo::cloud:function:Function::todo035b5d8f",
                    "urn:pulumi:foo::todo::cloud:function:Function::todo67876f56",
                    "urn:pulumi:foo::todo::cloud:function:Function::todoc57917fa"
                ]
            }
        ]
    }
}